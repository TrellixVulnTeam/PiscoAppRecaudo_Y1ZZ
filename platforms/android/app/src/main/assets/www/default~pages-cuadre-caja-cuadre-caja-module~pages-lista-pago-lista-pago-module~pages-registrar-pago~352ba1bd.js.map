{"version":3,"sources":["./src/app/models/responses/pago-response.model.ts","./src/app/services/pagos.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA,uDAAuD;AACvD;IAAA;QAKI,gBAAW,GAAW,EAAE,CAAC;IAY7B,CAAC;IAAD,wBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACf0C;AACoD;AACD;AAGtC;AAExD,UAAU;AACiE;AACf;AACF;AACR;AAElD,UAAU;AAC2C;AAGrD,YAAY;AACmD;AAC8B;AACjB;AACzB;;IAcjD,sBACU,QAAkB,EAClB,IAAgB,EAChB,eAAgC,EAChC,eAAgC,EAChC,iBAAoC,EACpC,kBAAsC,EACtC,UAAsB,EACtB,WAAwB,EACxB,MAAc,EACd,oBAA0C,EAC1C,OAAuB;QAVvB,aAAQ,GAAR,QAAQ,CAAU;QAClB,SAAI,GAAJ,IAAI,CAAY;QAChB,oBAAe,GAAf,eAAe,CAAiB;QAChC,oBAAe,GAAf,eAAe,CAAiB;QAChC,sBAAiB,GAAjB,iBAAiB,CAAmB;QACpC,uBAAkB,GAAlB,kBAAkB,CAAoB;QACtC,eAAU,GAAV,UAAU,CAAY;QACtB,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAQ;QACd,yBAAoB,GAApB,oBAAoB,CAAsB;QAC1C,YAAO,GAAP,OAAO,CAAgB;QAjBjC,WAAM,GAAgB,IAAI,gEAAW,EAAE,CAAC;QAGxC,gBAAW,GAAW,CAAC,CAAC;QACxB,eAAU,GAAY,CAAC,CAAC;QAetB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,oBAAoB,CAAC,MAAM,CAAC;IACjD,CAAC;IAED,sCAAe,GAAf;QAAA,iBA8BC;QA7BC,OAAO,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YAEjC,IAAI,SAAS,GAAG,YAAY,CAAC,OAAO,CAAC,aAAa,CAAC,KAAK,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC;YAE9E,IAAG,CAAC,SAAS,EACb;gBACI,IAAM,YAAY,GAAG,IAAI,mEAAY,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC;gBACnD,KAAI,CAAC,IAAI,CAAC,GAAG,CAAI,YAAY,CAAC,SAAS,EAAE,qBAAkB,CAAC;qBACzD,SAAS,CAAC,UAAC,MAAa;oBACvB,OAAO,CAAC,MAAM,CAAC,CAAC;gBACpB,CAAC,EACD,UAAC,KAAwB;oBACvB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;oBAClC,MAAM,EAAE,CAAC;oBACT,KAAI,CAAC,kBAAkB,CAAC,0BAA0B,CAAC,CAAC;gBAEtD,CAAC,CAAC,CAAC;aACN;iBAED;gBACE,KAAI,CAAC,OAAO,CAAC,cAAc,EAAE,CAAC,IAAI,CAAC,aAAG;oBACpC,iDAAiD;oBACjD,KAAI,CAAC,OAAO,CAAC,YAAY,EAAE,CAAC,IAAI,CAAC,UAAC,MAAa;wBAC7C,OAAO,CAAC,MAAM,CAAC,CAAC;oBAClB,CAAC,CAAC,CAAC;gBACP,CAAC,CAAC,CAAC;aAEF;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,iCAAU,GAAV,UAAW,KAAa,EAAE,OAAe;QAAzC,iBAgDC;QA/CC,OAAO,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YACjC,IAAI,SAAS,GAAG,YAAY,CAAC,OAAO,CAAC,aAAa,CAAC,KAAK,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC;YAE9E,IAAG,CAAC,SAAS,EAAC;gBACV,KAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC;oBAC5B,OAAO,EAAE,gBAAgB;oBACzB,QAAQ,EAAE,KAAK;iBAChB,CAAC,CAAC,IAAI,CAAC,UAAC,OAAO;oBAEd,OAAO,CAAC,OAAO,EAAE,CAAC;oBAElB,IAAM,QAAQ,GAAG,IAAI,gFAAqB,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;oBAC3D,IAAM,YAAY,GAAG,IAAI,mEAAY,CAAC,KAAI,CAAC,oBAAoB,CAAC,MAAM,CAAC,CAAC;oBACxE,IAAM,WAAW,GAAG;wBAClB,OAAO,EAAE,IAAI,gEAAW,CAAC;4BACvB,cAAc,EAAE,kBAAkB;yBACnC,CAAC;qBACH,CAAC;oBAEF,KAAI,CAAC,IAAI,CAAC,IAAI,CAAI,YAAY,CAAC,SAAS,EAAE,mBAAgB,EAAE,QAAQ,EAAE,WAAW,CAAC;yBACjF,SAAS,CAAC,UAAC,IAA6B;wBACrC,OAAO,CAAC,OAAO,EAAE,CAAC;wBAClB,OAAO,CAAC,IAAI,CAAC,CAAC;oBAChB,CAAC,EACC,UAAC,KAAwB;wBACvB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;wBAClC,KAAI,CAAC,kBAAkB,CAAC,mCAAmC,CAAC,CAAC;wBAC7D,OAAO,CAAC,OAAO,EAAE,CAAC;wBAClB,MAAM,EAAE,CAAC;oBACX,CAAC,CAAC,CAAC;gBAET,CAAC,CAAC,CAAC;aACN;iBACG;gBACF,KAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC;oBAC5B,OAAO,EAAE,gBAAgB;oBACzB,QAAQ,EAAE,KAAK;iBAChB,CAAC,CAAC,IAAI,CAAC,UAAC,OAAO;oBACd,OAAO,CAAC,OAAO,EAAE,CAAC;oBAClB,KAAI,CAAC,OAAO,CAAC,aAAa,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC,IAAI,CAAC,UAAC,IAA6B;wBAC1E,OAAO,CAAC,OAAO,EAAE,CAAC;wBAClB,OAAO,CAAC,IAAI,CAAC,CAAC;oBAClB,CAAC,CAAC,CAAC;gBACL,CAAC,CAAC,CAAC;aAEJ;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,+BAAQ,GAAR,UAAS,KAAa,EAAE,OAAe;QAAvC,iBAiCC;QAhCC,OAAO,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YAEjC,KAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC;gBAC5B,OAAO,EAAE,aAAa;gBACtB,QAAQ,EAAE,KAAK;aAChB,CAAC,CAAC,IAAI,CAAC,UAAC,OAAO;gBAEd,OAAO,CAAC,OAAO,EAAE,CAAC;gBAElB,IAAM,QAAQ,GAAG,IAAI,gFAAqB,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;gBAC3D,IAAM,YAAY,GAAG,IAAI,mEAAY,CAAC,KAAI,CAAC,oBAAoB,CAAC,MAAM,CAAC,CAAC;gBACxE,IAAM,WAAW,GAAG;oBAClB,OAAO,EAAE,IAAI,gEAAW,CAAC;wBACvB,cAAc,EAAE,kBAAkB;qBACnC,CAAC;iBACH,CAAC;gBAEF,KAAI,CAAC,IAAI,CAAC,IAAI,CAAI,YAAY,CAAC,SAAS,EAAE,wBAAqB,EAAE,QAAQ,EAAE,WAAW,CAAC;qBACtF,SAAS,CAAC,UAAC,IAAc;oBACtB,OAAO,CAAC,OAAO,EAAE,CAAC;oBAClB,OAAO,CAAC,IAAI,CAAC,CAAC;gBAChB,CAAC,EACC,UAAC,KAAwB;oBACvB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;oBAClC,KAAI,CAAC,kBAAkB,CAAC,mCAAmC,CAAC,CAAC;oBAC7D,OAAO,CAAC,OAAO,EAAE,CAAC;oBAClB,MAAM,EAAE,CAAC;gBACX,CAAC,CAAC,CAAC;YAET,CAAC,CAAC,CAAC;QAEL,CAAC,CAAC,CAAC;IACL,CAAC;IAGD,2CAAoB,GAApB,UAAqB,YAAgC;QAArD,iBAyEC;QAxEC,OAAO,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YAEjC,IAAI,CAAC,YAAY,CAAC,SAAS,EAAE;gBAC3B,KAAI,CAAC,kBAAkB,CAAC,uCAAuC,CAAC,CAAC;gBACjE,MAAM,EAAE,CAAC;gBACT,OAAO;aACR;YAED,IAAI,CAAC,KAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,SAAS,CAAC,EAAE;gBAEhC,OAAO,CAAC,YAAY,CAAC,CAAC;aAEvB;iBAAM;gBAEL,sCAAsC;gBAEtC,KAAI,CAAC,gBAAgB,EAAE,CAAC,IAAI,CAAC;oBAE3B,KAAI,CAAC,gBAAgB,EAAE,CAAC,IAAI,CAAC;wBAE3B,KAAI,CAAC,wBAAwB,EAAE,CAAC,IAAI,CAAC;4BAEnC,KAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC;gCAC5B,OAAO,EAAE,4BAA4B;gCACrC,QAAQ,EAAE,IAAI;6BACf,CAAC,CAAC,IAAI,CAAC,UAAC,OAAO;gCAEd,OAAO,CAAC,OAAO,EAAE,CAAC;gCAElB,+BAA+B;gCAC/B,KAAI,CAAC,WAAW,CAAC,kBAAkB,CAAC;oCAClC,OAAO,EAAE,IAAI;oCACb,kBAAkB,EAAE,IAAI;iCACzB,CAAC,CAAC,IAAI,CAAC,UAAC,IAAI;oCACX,OAAO,CAAC,OAAO,EAAE,CAAC;oCAElB,YAAY,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;oCACjD,YAAY,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;oCAElD,oBAAoB;oCACpB,YAAY,CAAC,OAAO,GAAG,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC;oCAExC,OAAO,CAAC,GAAG,CAAC,WAAS,YAAY,CAAC,IAAI,gBAAW,YAAY,CAAC,IAAM,CAAC,CAAC;oCACtE,OAAO,CAAC,GAAG,CAAC,cAAY,YAAY,CAAC,OAAS,CAAC,CAAC;oCAEhD,gCAAgC;oCAChC,OAAO,CAAC,YAAY,CAAC,CAAC;gCAExB,CAAC,CAAC,CAAC,KAAK,CAAC,UAAC,KAAK;oCACb,OAAO,CAAC,OAAO,EAAE,CAAC;oCAClB,KAAI,CAAC,kBAAkB,CAAC,uDAAuD,CAAC,CAAC;oCACjF,OAAO,CAAC,YAAY,CAAC,CAAC;oCACtB,WAAW;gCACb,CAAC,CAAC,CAAC;4BAEL,CAAC,CAAC,CAAC;wBAEL,CAAC,CAAC,CAAC,KAAK,CAAC;4BACP,MAAM,EAAE,CAAC;wBACX,CAAC,CAAC,CAAC;oBAEL,CAAC,CAAC,CAAC,KAAK,CAAC;wBACP,MAAM,EAAE,CAAC;oBACX,CAAC,CAAC,CAAC;gBAEL,CAAC,CAAC,CAAC,KAAK,CAAC;oBACP,MAAM,EAAE,CAAC;gBACX,CAAC,CAAC,CAAC;aAEJ;QAEH,CAAC,CAAC,CAAC;IACL,CAAC;IAEO,uCAAgB,GAAxB;QAAA,iBA4CC;QA3CC,OAAO,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YACjC,KAAI,CAAC,UAAU,CAAC,oBAAoB,EAAE,CAAC,IAAI,CAAC,UAAC,UAAU;gBAErD,OAAO,CAAC,GAAG,CAAC,wCAAgC,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAE,CAAC,CAAC;gBAExE,IAAI,CAAC,UAAU,EAAE;oBACf,4BAA4B;oBAE5B,KAAI,CAAC,eAAe,CAAC,MAAM,CAAC;wBAC1B,MAAM,EAAE,oBAAoB;wBAC5B,OAAO,EAAE,gEAAgE;wBACzE,OAAO,EAAE,CAAC;gCACR,IAAI,EAAE,QAAQ;gCACd,IAAI,EAAE,UAAU;gCAChB,OAAO,EAAE;oCACP,MAAM,EAAE,CAAC;gCACX,CAAC;6BACF,EAAE;gCACD,IAAI,EAAE,YAAY;gCAClB,OAAO,EAAE;oCAEP,KAAI,CAAC,UAAU,CAAC,4BAA4B,EAAE,CAAC,IAAI,CAAC;wCAClD,OAAO,CAAC,IAAI,CAAC,CAAC;oCAChB,CAAC,CAAC,CAAC,KAAK,CAAC;wCACP,KAAI,CAAC,kBAAkB,CAAC,8BAA8B,CAAC,CAAC;wCACxD,MAAM,EAAE,CAAC;oCACX,CAAC,CAAC,CAAC;gCAEL,CAAC;6BACF,CAAC;qBACH,CAAC,CAAC,IAAI,CAAC,UAAC,OAAO;wBACd,OAAO,CAAC,OAAO,EAAE,CAAC;oBACpB,CAAC,CAAC,CAAC;iBAEJ;qBAAM;oBACL,OAAO,CAAC,IAAI,CAAC,CAAC;iBACf;YAEH,CAAC,CAAC,CAAC,KAAK,CAAC,UAAC,KAAK;gBACb,KAAI,CAAC,kBAAkB,CAAC,uCAAuC,CAAC,CAAC;gBACjE,MAAM,EAAE,CAAC;YACX,CAAC,CAAC;QACJ,CAAC,CAAC,CAAC;IACL,CAAC;IAEO,uCAAgB,GAAxB;QAAA,iBAsCC;QArCC,OAAO,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YACjC,KAAI,CAAC,UAAU,CAAC,sBAAsB,EAAE,CAAC,IAAI,CAAC,UAAC,OAAO;gBAEpD,OAAO,CAAC,GAAG,CAAC,gCAAwB,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAE,CAAC,CAAC;gBAE7D,IAAI,CAAC,OAAO,EAAE;oBACZ,wBAAwB;oBAExB,KAAI,CAAC,eAAe,CAAC,MAAM,CAAC;wBAC1B,MAAM,EAAE,aAAa;wBACrB,OAAO,EAAE,uEAAuE;wBAChF,OAAO,EAAE,CAAC;gCACR,IAAI,EAAE,QAAQ;gCACd,IAAI,EAAE,UAAU;gCAChB,OAAO,EAAE;oCACP,MAAM,EAAE,CAAC;gCACX,CAAC;6BACF,EAAE;gCACD,IAAI,EAAE,YAAY;gCAClB,OAAO,EAAE;oCACP,KAAI,CAAC,UAAU,CAAC,wBAAwB,EAAE,CAAC;oCAC3C,MAAM,EAAE,CAAC;gCACX,CAAC;6BACF,CAAC;qBACH,CAAC,CAAC,IAAI,CAAC,UAAC,OAAO;wBACd,OAAO,CAAC,OAAO,EAAE,CAAC;oBACpB,CAAC,CAAC,CAAC;iBAEJ;qBAAM;oBACL,OAAO,CAAC,IAAI,CAAC,CAAC;iBACf;YAEH,CAAC,CAAC,CAAC,KAAK,CAAC,UAAC,KAAK;gBACb,KAAI,CAAC,kBAAkB,CAAC,8BAA8B,CAAC,CAAC;gBACxD,MAAM,EAAE,CAAC;YACX,CAAC,CAAC;QACJ,CAAC,CAAC,CAAC;IACL,CAAC;IAED,yBAAyB;IACjB,+CAAwB,GAAhC;QAAA,iBAuDC;QAtDC,OAAO,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YAEjC,KAAI,CAAC,kBAAkB,CAAC,eAAe,CACrC,KAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC,gBAAgB,CACpD,CAAC,IAAI,CAAC,UAAC,aAAa;gBAEnB,OAAO,CAAC,GAAG,CAAC,0DAAkD,aAAa,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAE,CAAC,CAAC;gBAE7F,IAAI,CAAC,aAAa,EAAE;oBAElB,KAAI,CAAC,eAAe,CAAC,MAAM,CAAC;wBAC1B,MAAM,EAAE,4BAA4B;wBACpC,OAAO,EAAE,sGAAsG;wBAC/G,OAAO,EAAE,CAAC;gCACR,IAAI,EAAE,QAAQ;gCACd,IAAI,EAAE,UAAU;gCAChB,OAAO,EAAE;oCACP,MAAM,EAAE,CAAC;gCACX,CAAC;6BACF,EAAE;gCACD,IAAI,EAAE,YAAY;gCAClB,OAAO,EAAE;oCAEP,oBAAoB;oCACpB,KAAI,CAAC,kBAAkB,CAAC,iBAAiB,CACvC,KAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC,gBAAgB,CACpD,CAAC,IAAI,CAAC;wCAEL,OAAO,CAAC,IAAI,CAAC,CAAC;oCAEhB,CAAC,CAAC,CAAC,KAAK,CAAC;wCAEP,MAAM,EAAE,CAAC;oCAEX,CAAC,CAAC,CAAC;gCAEL,CAAC;6BACF,CAAC;qBACH,CAAC,CAAC,IAAI,CAAC,UAAC,OAAO;wBACd,OAAO,CAAC,OAAO,EAAE,CAAC;oBACpB,CAAC,CAAC,CAAC;iBAEJ;qBAAM;oBAEL,OAAO,CAAC,IAAI,CAAC,CAAC;iBAEf;YAEH,CAAC,CAAC,CAAC,KAAK,CAAC,UAAC,KAAK;gBACb,KAAI,CAAC,kBAAkB,CAAC,yDAAyD,CAAC,CAAC;gBACnF,MAAM,EAAE,CAAC;YACX,CAAC,CAAC,CAAC;QAEL,CAAC,CAAC,CAAC;IACL,CAAC;IAGD,oCAAa,GAAb,UAAc,IAAwB;QAAtC,iBAoHC;QAnHC,OAAO,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YAEjC,IAAM,YAAY,GAAG,IAAI,mEAAY,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC;YACnD,IAAM,WAAW,GAAG;gBAClB,OAAO,EAAE,IAAI,gEAAW,CAAC;oBACvB,cAAc,EAAE,kBAAkB;iBACnC,CAAC;aACH,CAAC;YAEF,IAAM,SAAS,GAAG,YAAY,CAAC,OAAO,CAAC,aAAa,CAAC,KAAK,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC;YAEhF,IAAG,CAAC,SAAS,EAAC;gBACR,KAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC;oBAC5B,OAAO,EAAE,kBAAkB;oBAC3B,QAAQ,EAAE,KAAK;iBAChB,CAAC,CAAC,IAAI,CAAC,UAAC,OAAO;oBACd,OAAO,CAAC,OAAO,EAAE,CAAC;oBAClB,OAAO,CAAC,GAAG,CAAC,yBAAyB,EAAE,IAAI,CAAC;oBAC5C,KAAI,CAAC,IAAI,CAAC,IAAI,CAAI,YAAY,CAAC,SAAS,EAAE,iBAAc,EAAE,IAAI,EAAE,WAAW,CAAC;wBAC5E,4EAA4E;yBACzE,SAAS,CAAC,UAAC,MAAyB;wBACnC,IAAI,MAAM,CAAC,SAAS,CAAC,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,EAAE;4BAE5C,OAAO,CAAC,OAAO,EAAE,CAAC;4BAClB,KAAI,CAAC,eAAe,CAAC,MAAM,CAAC;gCAC1B,MAAM,EAAE,OAAO;gCACf,OAAO,EAAE,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;gCAC9E,OAAO,EAAC,CAAC,IAAI,CAAC;6BACf,CAAC,CAAC,IAAI,CAAC,aAAG;gCACT,GAAG,CAAC,OAAO,EAAE,CAAC;4BAChB,CAAC,CAAC,CAAC;4BACH,MAAM,EAAE,CAAC;yBACV;6BAAM;4BACL,OAAO,CAAC,OAAO,EAAE,CAAC;4BAClB,KAAI,CAAC,eAAe,CAAC,MAAM,CAAC;gCAC1B,MAAM,EAAE,aAAa;gCACrB,OAAO,EAAE,mCAAmC;gCAC5C,OAAO,EAAC,CAAC,IAAI,CAAC;6BACf,CAAC,CAAC,IAAI,CAAC,aAAG;gCACT,GAAG,CAAC,OAAO,EAAE,CAAC;4BAChB,CAAC,CAAC,CAAC;4BACH,OAAO,CAAC,MAAM,CAAC,CAAC;yBACjB;oBACH,CAAC,EACC,UAAC,KAAwB;wBAEvB,OAAO,CAAC,OAAO,EAAE,CAAC;wBAClB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;wBAClC,MAAM,EAAE,CAAC;wBACT,KAAI,CAAC,kBAAkB,CAAC,0BAA0B,CAAC,CAAC;oBAEtD,CAAC,CAAC,CAAC;gBAET,CAAC,CAAC,CAAC;aACV;iBAED;gBACE,IAAI,QAAM,GAAG,IAAI,wFAAiB,EAAE,CAAC;gBAErC,KAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC;oBACxB,OAAO,EAAG,kBAAkB;oBAC5B,QAAQ,EAAE,KAAK;iBAClB,CAAC,CAAC,IAAI,CAAC,UAAC,OAAO;oBACd,OAAO,CAAC,OAAO,EAAE,CAAC;oBAClB,KAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,UAAC,IAAS;wBAClD,OAAO,CAAC,OAAO,EAAE,CAAC;wBAClB,KAAI,CAAC,eAAe,CAAC,MAAM,CAAC;4BAClB,MAAM,EAAE,aAAa;4BACrB,OAAO,EAAE,mCAAmC;4BAC5C,OAAO,EAAC,CAAC,IAAI,CAAC;4BAChB,uCAAuC;yBACtC,CAAC,CAAC,IAAI,CAAC,aAAG;4BACT,GAAG,CAAC,OAAO,EAAE,CAAC;wBAChB,CAAC,CAAC,CAAC;wBAEX,KAAI,CAAC,OAAO,CAAC,YAAY,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,UAAC,GAAQ;4BACvC,QAAM,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,kBAAkB;4BACrD,QAAM,CAAC,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC;4BACpC,QAAM,CAAC,MAAM,GAAG,CAAC,CAAC;4BAClB,QAAM,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC;4BAC3B,0CAA0C;4BAC1C,IAAI,KAAK,GAAG,IAAI,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;4BACpC,QAAM,CAAC,KAAK,GAAG,KAAK,CAAC,QAAQ,EAAE,CAAC;4BAChC,OAAO,CAAC,GAAG,CAAC,+BAA+B,EAAE,IAAI,CAAC;4BAClD,IAAI,IAAI,CAAC,cAAc,IAAI,CAAC,EAAC;gCAE3B,KAAI,CAAC,OAAO,GAAK,IAAI,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE,EAAE,KAAK,CAAC,QAAQ,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC;gCACvE,KAAI,CAAC,WAAW,GAAG,CAAC,IAAI,CAAC,YAAY,GAAG,KAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC,CAAC;gCAChE,KAAI,CAAC,UAAU,GAAG,CAAC,IAAI,CAAC,KAAK,GAAG,KAAI,CAAC,WAAW,CAAC;gCAEjD,QAAM,CAAC,KAAK,GAAI,IAAI,IAAI,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,OAAO,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,SAAS,CAAE,CAAC,OAAO,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,KAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC;gCACvI,OAAO,CAAC,GAAG,CAAC,wBAAwB,EAAE,KAAI,CAAC,OAAO,CAAC,OAAO,EAAE,EAAE,eAAe,EAAE,KAAI,CAAC,WAAW,EAAE,eAAe,EAAE,IAAI,CAAC,KAAK,CAAC,KAAI,CAAC,UAAU,CAAC,EAAE,iBAAiB,EAAG,QAAM,CAAC,KAAK,CAAC;6BAEjL;iCAAI;gCACH,QAAM,CAAC,KAAK,GAAI,IAAI,IAAI,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,SAAS,CAAE,CAAC,QAAQ,EAAE,GAAG,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC;6BAClI;4BACD,KAAI,CAAC,OAAO,CAAC,eAAe,CAAC,QAAM,CAAC,KAAK,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,cAAO,CAAC,CAAC,CAAC;4BAC3E,gCAAgC;4BAChC,KAAI,CAAC,OAAO,CAAC,WAAW,CAAC,QAAM,CAAC,KAAK,EAAE,QAAM,CAAC,KAAK,EAAE,QAAM,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,cAAO,CAAC,CAAC,CAAC;4BAGtF,OAAO,CAAC,QAAM,CAAC,CAAC;wBAC1B,CAAC,CAAC,CAAC;wBAKZ,mBAAmB;oBACpB,CAAC,CAAC,CAAC;gBAEL,CAAC,CAAC,CAAC;aAEN;QAED,CAAC,CAAC,CAAC;IACL,CAAC;IAED,yCAAkB,GAAlB,UAAmB,MAAc,EAAE,KAAa;QAC9C,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC;YAC1B,MAAM,EAAE,MAAM;YACd,OAAO,EAAE,KAAK;YACd,OAAO,EAAE,CAAC;oBACR,IAAI,EAAE,QAAQ;oBACd,IAAI,EAAE,IAAI;iBACX,CAAC;SACH,CAAC,CAAC,IAAI,CAAC,UAAC,OAAO;YACd,OAAO,CAAC,OAAO,EAAE,CAAC;QACpB,CAAC,CAAC,CAAC;IACL,CAAC;IAEO,yCAAkB,GAA1B,UAA2B,KAAa;QACtC,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC;YAC1B,OAAO,EAAE,KAAK;YACd,QAAQ,EAAE,IAAI;SACf,CAAC,CAAC,IAAI,CAAC,eAAK;YACX,KAAK,CAAC,OAAO,EAAE,CAAC;QAClB,CAAC,CAAC,CAAC;IACL,CAAC;;gBA9gBM,uDAAQ;gBACR,+DAAU;gBADoC,8DAAe;gBAAnD,8DAAe;gBAAE,gEAAiB;gBAO5C,wFAAkB;gBAElB,uEAAU;gBADV,yEAAW;gBAEX,+DAAM;gBAON,4EAAoB;gBAGpB,gEAAc;;IAMV,YAAY;QAHxB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;uFAUoB,uDAAQ;YACZ,+DAAU;YACC,8DAAe;YACf,8DAAe;YACb,gEAAiB;YAChB,wFAAkB;YAC1B,uEAAU;YACT,yEAAW;YAChB,+DAAM;YACQ,4EAAoB;YACjC,gEAAc;OAnBtB,YAAY,CAqfxB;IAAD,mBAAC;CAAA;AArfwB","file":"default~pages-cuadre-caja-cuadre-caja-module~pages-lista-pago-lista-pago-module~pages-registrar-pago~352ba1bd.js","sourcesContent":["// Informaciòn que retorna el servidor al inicar sesión\r\nexport class PagoResponseModel {\r\n    NroRecibo: string;\r\n    Desde: string;\r\n    Hasta: string;\r\n    Concepto: string;\r\n    DetallePago: string = '';\r\n    Respuesta: string;\r\n    Anulado: string;\r\n    PVisita: string;\r\n    Valorenletras: string;\r\n    Vdesde: string;\r\n    Vhasta: string;\r\n    VlrCto: number;\r\n    VlrSaldo: number;\r\n    VlrDctoPago: number;\r\n    VlrIva: number;\r\n    FormaPago : string;\r\n}","\r\n\r\n\r\nimport { Injectable } from '@angular/core';\r\nimport { Platform, ToastController, LoadingController, AlertController } from '@ionic/angular';\r\nimport { HttpClient, HttpHeaders, HttpErrorResponse, HttpParams } from '@angular/common/http';\r\n\r\n\r\nimport { ConfigHelper } from '../helpers/config.helper';\r\n\r\n// Plugins\r\nimport { AndroidPermissions } from '@ionic-native/android-permissions/ngx';\r\nimport { Geolocation } from '@ionic-native/geolocation/ngx';\r\nimport { Diagnostic } from '@ionic-native/diagnostic/ngx';\r\nimport { Device } from '@ionic-native/device/ngx';\r\n\r\n// Modelos\r\nimport { ConfigModel } from '../models/config.model';\r\nimport { RegistrarpagoModel } from '../models/registrar-pago.model';\r\n\r\n// Servicios\r\nimport { ConfiguracionService } from './configuracion.service';\r\nimport { CuadreCajaRequesModel, CuadreCajaResponseModel } from '../models/cuadre-caja.model';\r\nimport { PagoResponseModel } from '../models/responses/pago-response.model';\r\nimport { OfflineService } from './offline.service';\r\nimport * as moment from 'moment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PagosService {\r\n\r\n  config: ConfigModel = new ConfigModel();\r\n\r\n  DiasMes: Date;\r\n  ValorPorDia: number = 0;\r\n  DiasASumar : number = 0;\r\n\r\n  constructor(\r\n    private platform: Platform,\r\n    private http: HttpClient,\r\n    private alertController: AlertController,\r\n    private toastController: ToastController,\r\n    private loadingController: LoadingController,\r\n    private androidPermissions: AndroidPermissions,\r\n    private diagnostic: Diagnostic,\r\n    private geolocation: Geolocation,\r\n    private device: Device,\r\n    private configuracionService: ConfiguracionService,\r\n    private offline: OfflineService\r\n  ) {\r\n    this.config = this.configuracionService.config;\r\n  }\r\n\r\n  cargarFormaPago() {\r\n    return new Promise((resolve, reject) => {\r\n\r\n      let isOffline = localStorage.getItem('offlineMode') === 'true' ? true : false;\r\n\r\n      if(!isOffline)\r\n      {\r\n          const configHelper = new ConfigHelper(this.config);\r\n          this.http.get(`${configHelper.getApiUrl()}/pago/TiposPagos`)\r\n            .subscribe((result: any[]) => {\r\n              resolve(result);\r\n          },\r\n          (error: HttpErrorResponse) => {\r\n            console.log(JSON.stringify(error))\r\n            reject();\r\n            this.mostrarToastSimple('Error realizando el pago');\r\n    \r\n          });\r\n      }\r\n      else\r\n      {\r\n        this.offline.createDatabase().then(res => {\r\n          // tslint:disable-next-line: no-shadowed-variable\r\n          this.offline.getFormaPago().then((result: any[]) => {\r\n            resolve(result);\r\n          });\r\n      });\r\n\r\n      }\r\n    });\r\n  }\r\n\r\n  cuadreCaja(fecha: string, usuario: string) {\r\n    return new Promise((resolve, reject) => {\r\n      let isOffline = localStorage.getItem('offlineMode') === 'true' ? true : false;\r\n\r\n      if(!isOffline){\r\n          this.loadingController.create({\r\n            message: 'Cuadrando Caja',\r\n            duration: 30000\r\n          }).then((loading) => {\r\n    \r\n            loading.present();\r\n    \r\n            const dataPost = new CuadreCajaRequesModel(usuario, fecha);\r\n            const configHelper = new ConfigHelper(this.configuracionService.config);\r\n            const httpOptions = {\r\n              headers: new HttpHeaders({\r\n                'Content-Type': 'application/json'\r\n              })\r\n            };\r\n            \r\n            this.http.post(`${configHelper.getApiUrl()}/cuadre/cuadre`, dataPost, httpOptions)\r\n            .subscribe((data: CuadreCajaResponseModel) => {\r\n                loading.dismiss();\r\n                resolve(data);\r\n              },\r\n                (error: HttpErrorResponse) => {\r\n                  console.log(JSON.stringify(error))\r\n                  this.mostrarToastSimple('Error autenticando en el servidor');\r\n                  loading.dismiss();\r\n                  reject();\r\n                });\r\n    \r\n          });\r\n      }\r\n      else{\r\n        this.loadingController.create({\r\n          message: 'Cuadrando Caja',\r\n          duration: 30000\r\n        }).then((loading) => {\r\n          loading.present();\r\n          this.offline.getCuadreCaja(usuario, fecha).then((data: CuadreCajaResponseModel) => {\r\n              loading.dismiss();\r\n              resolve(data);\r\n          });\r\n        });\r\n\r\n      }\r\n    });\r\n  }\r\n\r\n  lstPagos(fecha: string, usuario: string) {\r\n    return new Promise((resolve, reject) => {\r\n\r\n      this.loadingController.create({\r\n        message: 'Lista Pagos',\r\n        duration: 30000\r\n      }).then((loading) => {\r\n\r\n        loading.present();\r\n\r\n        const dataPost = new CuadreCajaRequesModel(usuario, fecha);\r\n        const configHelper = new ConfigHelper(this.configuracionService.config);\r\n        const httpOptions = {\r\n          headers: new HttpHeaders({\r\n            'Content-Type': 'application/json'\r\n          })\r\n        };\r\n        \r\n        this.http.post(`${configHelper.getApiUrl()}/cuadre/lstPagoUser`, dataPost, httpOptions)\r\n        .subscribe((data: string[]) => {\r\n            loading.dismiss();\r\n            resolve(data);\r\n          },\r\n            (error: HttpErrorResponse) => {\r\n              console.log(JSON.stringify(error))\r\n              this.mostrarToastSimple('Error autenticando en el servidor');\r\n              loading.dismiss();\r\n              reject();\r\n            });\r\n\r\n      });\r\n\r\n    });\r\n  }\r\n\r\n \r\n  prepararRegistroPago(registroPago: RegistrarpagoModel) {\r\n    return new Promise((resolve, reject) => {\r\n\r\n      if (!registroPago.FORMAPAGO) {\r\n        this.mostrarToastSimple('Por favor seleccione la forma de pago');\r\n        reject();\r\n        return;\r\n      }\r\n\r\n      if (!this.platform.is('android')) {\r\n\r\n        resolve(registroPago);\r\n\r\n      } else {\r\n\r\n        // Validaciones de permisos en Android\r\n\r\n        this.validarAccesoGPS().then(() => {\r\n\r\n          this.validarGPSActivo().then(() => {\r\n\r\n            this.validarAccesoDispositivo().then(() => {\r\n\r\n              this.loadingController.create({\r\n                message: 'Obteniendo geolocalización',\r\n                duration: 5300\r\n              }).then((loading) => {\r\n\r\n                loading.present();\r\n\r\n                // Obtenemos la geolocalización\r\n                this.geolocation.getCurrentPosition({\r\n                  timeout: 5000, \r\n                  enableHighAccuracy: true\r\n                }).then((resp) => {\r\n                  loading.dismiss();\r\n\r\n                  registroPago.POSX = String(resp.coords.latitude);\r\n                  registroPago.POSY = String(resp.coords.longitude);\r\n                  \r\n                  // Obtenemos el UUID\r\n                  registroPago.MAQUINA = this.device.uuid;\r\n\r\n                  console.log(`POSX: ${registroPago.POSX}, POSY: ${registroPago.POSY}`);\r\n                  console.log(`MAQUINA: ${registroPago.MAQUINA}`);\r\n\r\n                  // Mostrar modal de confirmación\r\n                  resolve(registroPago);\r\n\r\n                }).catch((error) => {\r\n                  loading.dismiss();\r\n                  this.mostrarToastSimple('Error obteniendo la geolocalización, intente de nuevo');\r\n                  resolve(registroPago);\r\n                  //reject();\r\n                });\r\n\r\n              });\r\n\r\n            }).catch(() => {\r\n              reject();\r\n            });\r\n\r\n          }).catch(() => {\r\n            reject();\r\n          });\r\n\r\n        }).catch(() => {\r\n          reject();\r\n        });\r\n\r\n      }\r\n\r\n    });\r\n  }\r\n\r\n  private validarAccesoGPS() {\r\n    return new Promise((resolve, reject) => {\r\n      this.diagnostic.isLocationAuthorized().then((authorized) => {\r\n\r\n        console.log(`¿Autorizado permiso de GPS?: ${authorized ? 'SI' : 'NO'}`);\r\n\r\n        if (!authorized) {\r\n          // No está autorizada la app\r\n\r\n          this.alertController.create({\r\n            header: 'Permiso uso de GPS',\r\n            message: 'Necesitamos su permiso para acceder al GPS antes de continuar.',\r\n            buttons: [{\r\n              role: 'cancel',\r\n              text: 'Cancelar',\r\n              handler: () => {\r\n                reject();\r\n              }\r\n            }, {\r\n              text: 'De acuerdo',\r\n              handler: () => {\r\n\r\n                this.diagnostic.requestLocationAuthorization().then(() => {\r\n                  resolve(null);\r\n                }).catch(() => {\r\n                  this.mostrarToastSimple('No se concedió acceso al GPS');\r\n                  reject();\r\n                });\r\n\r\n              }\r\n            }]\r\n          }).then((myAlert) => {\r\n            myAlert.present();\r\n          });\r\n\r\n        } else {\r\n          resolve(null);\r\n        }\r\n\r\n      }).catch((error) => {\r\n        this.mostrarToastSimple('Error comprobando autorizaciòn de GPS');\r\n        reject();\r\n      })\r\n    });\r\n  }\r\n\r\n  private validarGPSActivo() {\r\n    return new Promise((resolve, reject) => {\r\n      this.diagnostic.isGpsLocationAvailable().then((enabled) => {\r\n\r\n        console.log(`¿Esta activado GPS?: ${enabled ? 'SI' : 'NO'}`);\r\n\r\n        if (!enabled) {\r\n          // No está activo el GPS\r\n\r\n          this.alertController.create({\r\n            header: 'Activar GPS',\r\n            message: 'Por favor active el GPS en el modo Alta precisión antes de continuar.',\r\n            buttons: [{\r\n              role: 'cancel',\r\n              text: 'Cancelar',\r\n              handler: () => {\r\n                reject();\r\n              }\r\n            }, {\r\n              text: 'De acuerdo',\r\n              handler: () => {\r\n                this.diagnostic.switchToLocationSettings();\r\n                reject();\r\n              }\r\n            }]\r\n          }).then((myAlert) => {\r\n            myAlert.present();\r\n          });\r\n\r\n        } else {\r\n          resolve(null);\r\n        }\r\n\r\n      }).catch((error) => {\r\n        this.mostrarToastSimple('Error comprobando GPS activo');\r\n        reject();\r\n      })\r\n    });\r\n  }\r\n\r\n  // Para consultar el IMEI\r\n  private validarAccesoDispositivo() {\r\n    return new Promise((resolve, reject) => {\r\n\r\n      this.androidPermissions.checkPermission(\r\n        this.androidPermissions.PERMISSION.READ_PHONE_STATE\r\n      ).then((hasPermission) => {\r\n\r\n        console.log(`¿Autorizado permiso de estado de dispositivo?: ${hasPermission ? 'SI' : 'NO'}`);\r\n\r\n        if (!hasPermission) {\r\n\r\n          this.alertController.create({\r\n            header: 'Permiso estado dispositivo',\r\n            message: 'Necesitamos consultar el estado del dispositivo, por favor concedanos el permiso antes de continuar.',\r\n            buttons: [{\r\n              role: 'cancel',\r\n              text: 'Cancelar',\r\n              handler: () => {\r\n                reject();\r\n              }\r\n            }, {\r\n              text: 'De acuerdo',\r\n              handler: () => {\r\n\r\n                // Solicitar permiso\r\n                this.androidPermissions.requestPermission(\r\n                  this.androidPermissions.PERMISSION.READ_PHONE_STATE\r\n                ).then(() => {\r\n\r\n                  resolve(null);\r\n\r\n                }).catch(() => {\r\n\r\n                  reject();\r\n\r\n                });\r\n\r\n              }\r\n            }]\r\n          }).then((myAlert) => {\r\n            myAlert.present();\r\n          });\r\n\r\n        } else {\r\n\r\n          resolve(null);\r\n\r\n        }\r\n\r\n      }).catch((error) => {\r\n        this.mostrarToastSimple('Error comprobando autorizaciòn de estado de dispositivo');\r\n        reject();\r\n      });\r\n\r\n    });\r\n  }\r\n\r\n\r\n  registrarPago(pago: RegistrarpagoModel) {\r\n    return new Promise((resolve, reject) => {\r\n\r\n      const configHelper = new ConfigHelper(this.config);\r\n      const httpOptions = {\r\n        headers: new HttpHeaders({\r\n          'Content-Type': 'application/json',\r\n        })\r\n      };\r\n\r\n      const isOffline = localStorage.getItem('offlineMode') === 'true' ? true : false;\r\n\r\n      if(!isOffline){\r\n            this.loadingController.create({\r\n              message: 'Registrando pago',\r\n              duration: 30000\r\n            }).then((loading) => {\r\n              loading.present();\r\n              console.log(\"los datos del pago son:\", pago)\r\n              this.http.post(`${configHelper.getApiUrl()}/pago/create`, pago, httpOptions)\r\n              //this.http.post('http://localhost:5008/api/pago/create', pago, httpOptions)\r\n                .subscribe((result: PagoResponseModel) => {\r\n                  if (result.Respuesta.indexOf('ERROR') !== -1) {\r\n                    \r\n                    loading.dismiss();\r\n                    this.alertController.create({\r\n                      header: 'Error',\r\n                      message: result.Respuesta.split('-')[1] + ' ' + result.Respuesta.split('-')[2],\r\n                      buttons:['Ok']\r\n                    }).then(obj=>{\r\n                      obj.present();\r\n                    });\r\n                    reject();\r\n                  } else {\r\n                    loading.dismiss();\r\n                    this.alertController.create({\r\n                      header: 'Información',\r\n                      message: 'Pago realizado satisfactoriamente',\r\n                      buttons:['Ok']\r\n                    }).then(obj=>{\r\n                      obj.present();\r\n                    });\r\n                    resolve(result);\r\n                  }\r\n                },\r\n                  (error: HttpErrorResponse) => {\r\n      \r\n                    loading.dismiss();\r\n                    console.log(JSON.stringify(error))\r\n                    reject();\r\n                    this.mostrarToastSimple('Error realizando el pago');\r\n      \r\n                  });\r\n      \r\n            });\r\n    }\r\n    else\r\n    {\r\n      let result = new PagoResponseModel();\r\n          \r\n      this.loadingController.create({\r\n            message : 'Registrando Pago',\r\n            duration: 30000\r\n        }).then((loading) => {\r\n          loading.present();\r\n          this.offline.guardarPagosLocal(pago).then((resp: any) => {\r\n            loading.dismiss();\r\n            this.alertController.create({\r\n                      header: 'Información',\r\n                      message: 'Pago realizado satisfactoriamente',\r\n                      buttons:['Ok']\r\n                    // tslint:disable-next-line: whitespace\r\n                    }).then(obj=> {\r\n                      obj.present();\r\n                    });\r\n\r\n            this.offline.getPagoHasta(pago.IDCONTRATO).then((res: any) => {\r\n                              result.NroRecibo = pago.NRORECIBO; //resp; momentGGGG\r\n                              result.VlrDctoPago = pago.DESCUENTO;\r\n                              result.VlrIva = 0;\r\n                              result.VlrCto = pago.VALOR;\r\n                              //result.DetallePago = pago.OBSERVACIONES;\r\n                              let fecha = new Date(res.PAGOHASTA);\r\n                              result.Desde = fecha.toString();\r\n                              console.log(\"el pago**********************\", pago)\r\n                              if( pago.CANTIDADCUOTAS == 0){\r\n\r\n                                this.DiasMes =   new Date(fecha.getFullYear(), fecha.getMonth() + 1, 0)\r\n                                this.ValorPorDia = (pago.CUOTAMENSUAL / this.DiasMes.getDate());\r\n                                this.DiasASumar = (pago.VALOR / this.ValorPorDia)\r\n                                \r\n                                result.Hasta =  new Date(new Date(res.PAGOHASTA).setDate(new Date(res.PAGOHASTA ).getDate() + Math.round(this.DiasASumar))).toString();\r\n                                console.log(\"los datos son DiasMes \", this.DiasMes.getDate() ,\" ValorPorDia \", this.ValorPorDia, \"  DiasASumar \", Math.round(this.DiasASumar), \"  result.Hasta \",  result.Hasta)\r\n\r\n                              }else{\r\n                                result.Hasta =  new Date(new Date(res.PAGOHASTA).setMonth(new Date(res.PAGOHASTA ).getMonth() + pago.CANTIDADCUOTAS)).toString();\r\n                              }\r\n                              this.offline.updatePagoHasta(result.Hasta, pago.IDCONTRATO).then(() => {});\r\n                              //actualiza las fechas del pago \r\n                              this.offline.fechasPagos(result.Desde ,result.Hasta, result.NroRecibo).then(() => {});\r\n                              \r\n                              \r\n                              resolve(result);\r\n                    });\r\n\r\n\r\n\r\n\r\n           // resolve(result);\r\n          });\r\n         \r\n        });\r\n\r\n    }\r\n\r\n    });\r\n  }\r\n\r\n  mostrarAlertSimple(titulo: string, texto: string) {\r\n    this.alertController.create({\r\n      header: titulo,\r\n      message: texto,\r\n      buttons: [{\r\n        role: 'cancel',\r\n        text: 'Ok'\r\n      }]\r\n    }).then((myAlert) => {\r\n      myAlert.present();\r\n    });\r\n  }\r\n\r\n  private mostrarToastSimple(texto: string) {\r\n    this.toastController.create({\r\n      message: texto,\r\n      duration: 2000\r\n    }).then(toast => {\r\n      toast.present();\r\n    });\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///"}