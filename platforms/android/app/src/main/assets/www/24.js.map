{"version":3,"sources":["./node_modules/@ionic/core/dist/esm/ion-radio_2.entry.js"],"names":["radioIosCss","radioMdCss","Radio","hostRef","registerInstance","ionStyle","createEvent","ionFocus","ionBlur","inputId","radioButtonIds","radioGroup","checked","buttonTabindex","name","disabled","updateState","value","onFocus","emit","onBlur","buttonEl","focus","undefined","el","closest","addEventListener","removeEventListener","emitStyle","color","mode","getIonMode","labelId","label","findItemLabel","id","h","Host","role","class","createColorClasses","hostContext","part","ref","btnEl","type","tabindex","getElement","style","ios","md","RadioGroup","ionChange","radioGroupIds","allowEmptySelection","setRadioTabindex","radios","getRadios","first","find","radio","focusable","setButtonTabindex","onClick","ev","selectedRadio","target","currentValue","newValue","header","querySelector","Array","from","querySelectorAll","inSelectPopover","contains","filter","includes","index","findIndex","next","key","length","setFocus"],"mappings":"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","file":"24.js","sourcesContent":["import { r as registerInstance, e as createEvent, h, H as Host, i as getElement } from './index-92848855.js';\nimport { b as getIonMode } from './ionic-global-23e7365a.js';\nimport { a as addEventListener, b as removeEventListener, f as findItemLabel } from './helpers-47d562d2.js';\nimport { c as createColorClasses, h as hostContext } from './theme-5641d27f.js';\n\nconst radioIosCss = \":host{--inner-border-radius:50%;display:inline-block;position:relative;-webkit-box-sizing:border-box;box-sizing:border-box;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;z-index:2}:host(.radio-disabled){pointer-events:none}.radio-icon{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;height:100%;contain:layout size style}button{left:0;top:0;margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;position:absolute;width:100%;height:100%;border:0;background:transparent;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;outline:none}[dir=rtl] button,:host-context([dir=rtl]) button{left:unset;right:unset;right:0}button::-moz-focus-inner{border:0}.radio-icon,.radio-inner{-webkit-box-sizing:border-box;box-sizing:border-box}:host{--color-checked:var(--ion-color-primary, #3880ff);width:15px;height:24px}:host(.ion-color.radio-checked) .radio-inner{border-color:var(--ion-color-base)}.item-radio.item-ios ion-label{margin-left:0}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.item-radio.item-ios ion-label{margin-left:unset;-webkit-margin-start:0;margin-inline-start:0}}.radio-inner{width:33%;height:50%}:host(.radio-checked) .radio-inner{-webkit-transform:rotate(45deg);transform:rotate(45deg);border-width:2px;border-top-width:0;border-left-width:0;border-style:solid;border-color:var(--color-checked)}:host(.radio-disabled){opacity:0.3}:host(.ion-focused) .radio-icon::after{border-radius:var(--inner-border-radius);left:-9px;top:-8px;display:block;position:absolute;width:36px;height:36px;background:var(--ion-color-primary-tint, #4c8dff);content:\\\"\\\";opacity:0.2}:host-context([dir=rtl]):host(.ion-focused) .radio-icon::after,:host-context([dir=rtl]).ion-focused .radio-icon::after{left:unset;right:unset;right:-9px}:host(.in-item){margin-left:10px;margin-right:11px;margin-top:8px;margin-bottom:8px;display:block;position:static}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.in-item){margin-left:unset;margin-right:unset;-webkit-margin-start:10px;margin-inline-start:10px;-webkit-margin-end:11px;margin-inline-end:11px}}:host(.in-item[slot=start]){margin-left:3px;margin-right:21px;margin-top:8px;margin-bottom:8px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.in-item[slot=start]){margin-left:unset;margin-right:unset;-webkit-margin-start:3px;margin-inline-start:3px;-webkit-margin-end:21px;margin-inline-end:21px}}\";\n\nconst radioMdCss = \":host{--inner-border-radius:50%;display:inline-block;position:relative;-webkit-box-sizing:border-box;box-sizing:border-box;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;z-index:2}:host(.radio-disabled){pointer-events:none}.radio-icon{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;height:100%;contain:layout size style}button{left:0;top:0;margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;position:absolute;width:100%;height:100%;border:0;background:transparent;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;outline:none}[dir=rtl] button,:host-context([dir=rtl]) button{left:unset;right:unset;right:0}button::-moz-focus-inner{border:0}.radio-icon,.radio-inner{-webkit-box-sizing:border-box;box-sizing:border-box}:host{--color:var(--ion-color-step-400, #999999);--color-checked:var(--ion-color-primary, #3880ff);--border-width:2px;--border-style:solid;--border-radius:50%;width:20px;height:20px}:host(.ion-color) .radio-inner{background:var(--ion-color-base)}:host(.ion-color.radio-checked) .radio-icon{border-color:var(--ion-color-base)}.radio-icon{margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;border-radius:var(--border-radius);border-width:var(--border-width);border-style:var(--border-style);border-color:var(--color)}.radio-inner{border-radius:var(--inner-border-radius);width:calc(50% + var(--border-width));height:calc(50% + var(--border-width));-webkit-transform:scale3d(0, 0, 0);transform:scale3d(0, 0, 0);-webkit-transition:-webkit-transform 280ms cubic-bezier(0.4, 0, 0.2, 1);transition:-webkit-transform 280ms cubic-bezier(0.4, 0, 0.2, 1);transition:transform 280ms cubic-bezier(0.4, 0, 0.2, 1);transition:transform 280ms cubic-bezier(0.4, 0, 0.2, 1), -webkit-transform 280ms cubic-bezier(0.4, 0, 0.2, 1);background:var(--color-checked)}:host(.radio-checked) .radio-icon{border-color:var(--color-checked)}:host(.radio-checked) .radio-inner{-webkit-transform:scale3d(1, 1, 1);transform:scale3d(1, 1, 1)}:host(.radio-disabled){opacity:0.3}:host(.ion-focused) .radio-icon::after{border-radius:var(--inner-border-radius);left:-12px;top:-12px;display:block;position:absolute;width:36px;height:36px;background:var(--ion-color-primary-tint, #4c8dff);content:\\\"\\\";opacity:0.2}:host-context([dir=rtl]):host(.ion-focused) .radio-icon::after,:host-context([dir=rtl]).ion-focused .radio-icon::after{left:unset;right:unset;right:-12px}:host(.in-item){margin-left:0;margin-right:0;margin-top:9px;margin-bottom:9px;display:block;position:static}:host(.in-item[slot=start]){margin-left:4px;margin-right:36px;margin-top:11px;margin-bottom:10px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.in-item[slot=start]){margin-left:unset;margin-right:unset;-webkit-margin-start:4px;margin-inline-start:4px;-webkit-margin-end:36px;margin-inline-end:36px}}\";\n\nconst Radio = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.ionStyle = createEvent(this, \"ionStyle\", 7);\n        this.ionFocus = createEvent(this, \"ionFocus\", 7);\n        this.ionBlur = createEvent(this, \"ionBlur\", 7);\n        this.inputId = `ion-rb-${radioButtonIds++}`;\n        this.radioGroup = null;\n        /**\n         * If `true`, the radio is selected.\n         */\n        this.checked = false;\n        /**\n         * The tabindex of the radio button.\n         * @internal\n         */\n        this.buttonTabindex = -1;\n        /**\n         * The name of the control, which is submitted with the form data.\n         */\n        this.name = this.inputId;\n        /**\n         * If `true`, the user cannot interact with the radio.\n         */\n        this.disabled = false;\n        this.updateState = () => {\n            if (this.radioGroup) {\n                this.checked = this.radioGroup.value === this.value;\n            }\n        };\n        this.onFocus = () => {\n            this.ionFocus.emit();\n        };\n        this.onBlur = () => {\n            this.ionBlur.emit();\n        };\n    }\n    /** @internal */\n    async setFocus() {\n        if (this.buttonEl) {\n            this.buttonEl.focus();\n        }\n    }\n    /** @internal */\n    async setButtonTabindex(value) {\n        this.buttonTabindex = value;\n    }\n    connectedCallback() {\n        if (this.value === undefined) {\n            this.value = this.inputId;\n        }\n        const radioGroup = this.radioGroup = this.el.closest('ion-radio-group');\n        if (radioGroup) {\n            this.updateState();\n            addEventListener(radioGroup, 'ionChange', this.updateState);\n        }\n    }\n    disconnectedCallback() {\n        const radioGroup = this.radioGroup;\n        if (radioGroup) {\n            removeEventListener(radioGroup, 'ionChange', this.updateState);\n            this.radioGroup = null;\n        }\n    }\n    componentWillLoad() {\n        this.emitStyle();\n    }\n    emitStyle() {\n        this.ionStyle.emit({\n            'radio-checked': this.checked,\n            'interactive-disabled': this.disabled,\n        });\n    }\n    render() {\n        const { inputId, disabled, checked, color, el, buttonTabindex } = this;\n        const mode = getIonMode(this);\n        const labelId = inputId + '-lbl';\n        const label = findItemLabel(el);\n        if (label) {\n            label.id = labelId;\n        }\n        return (h(Host, { role: \"radio\", \"aria-disabled\": disabled ? 'true' : null, \"aria-checked\": `${checked}`, \"aria-labelledby\": labelId, class: createColorClasses(color, {\n                [mode]: true,\n                'in-item': hostContext('ion-item', el),\n                'interactive': true,\n                'radio-checked': checked,\n                'radio-disabled': disabled,\n            }) }, h(\"div\", { class: \"radio-icon\", part: \"container\" }, h(\"div\", { class: \"radio-inner\", part: \"mark\" })), h(\"button\", { ref: btnEl => this.buttonEl = btnEl, type: \"button\", onFocus: this.onFocus, onBlur: this.onBlur, disabled: disabled, tabindex: buttonTabindex })));\n    }\n    get el() { return getElement(this); }\n    static get watchers() { return {\n        \"color\": [\"emitStyle\"],\n        \"checked\": [\"emitStyle\"],\n        \"disabled\": [\"emitStyle\"]\n    }; }\n};\nlet radioButtonIds = 0;\nRadio.style = {\n    ios: radioIosCss,\n    md: radioMdCss\n};\n\nconst RadioGroup = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.ionChange = createEvent(this, \"ionChange\", 7);\n        this.inputId = `ion-rg-${radioGroupIds++}`;\n        this.labelId = `${this.inputId}-lbl`;\n        /**\n         * If `true`, the radios can be deselected.\n         */\n        this.allowEmptySelection = false;\n        /**\n         * The name of the control, which is submitted with the form data.\n         */\n        this.name = this.inputId;\n        this.setRadioTabindex = (value) => {\n            const radios = this.getRadios();\n            // Get the first radio that is not disabled and the checked one\n            const first = radios.find(radio => !radio.disabled);\n            const checked = radios.find(radio => (radio.value === value && !radio.disabled));\n            if (!first && !checked) {\n                return;\n            }\n            // If an enabled checked radio exists, set it to be the focusable radio\n            // otherwise we default to focus the first radio\n            const focusable = checked || first;\n            for (const radio of radios) {\n                const tabindex = radio === focusable ? 0 : -1;\n                radio.setButtonTabindex(tabindex);\n            }\n        };\n        this.onClick = (ev) => {\n            const selectedRadio = ev.target && ev.target.closest('ion-radio');\n            if (selectedRadio) {\n                const currentValue = this.value;\n                const newValue = selectedRadio.value;\n                if (newValue !== currentValue) {\n                    this.value = newValue;\n                }\n                else if (this.allowEmptySelection) {\n                    this.value = undefined;\n                }\n            }\n        };\n    }\n    valueChanged(value) {\n        this.setRadioTabindex(value);\n        this.ionChange.emit({ value });\n    }\n    componentDidLoad() {\n        this.setRadioTabindex(this.value);\n    }\n    async connectedCallback() {\n        // Get the list header if it exists and set the id\n        // this is used to set aria-labelledby\n        const el = this.el;\n        const header = el.querySelector('ion-list-header') || el.querySelector('ion-item-divider');\n        if (header) {\n            const label = header.querySelector('ion-label');\n            if (label) {\n                this.labelId = label.id = this.name + '-lbl';\n            }\n        }\n    }\n    getRadios() {\n        return Array.from(this.el.querySelectorAll('ion-radio'));\n    }\n    onKeydown(ev) {\n        const inSelectPopover = !!this.el.closest('ion-select-popover');\n        if (ev.target && !this.el.contains(ev.target)) {\n            return;\n        }\n        // Get all radios inside of the radio group and then\n        // filter out disabled radios since we need to skip those\n        const radios = Array.from(this.el.querySelectorAll('ion-radio')).filter(radio => !radio.disabled);\n        // Only move the radio if the current focus is in the radio group\n        if (ev.target && radios.includes(ev.target)) {\n            const index = radios.findIndex(radio => radio === ev.target);\n            let next;\n            // If hitting arrow down or arrow right, move to the next radio\n            // If we're on the last radio, move to the first radio\n            if (['ArrowDown', 'ArrowRight'].includes(ev.key)) {\n                next = (index === radios.length - 1)\n                    ? radios[0]\n                    : radios[index + 1];\n            }\n            // If hitting arrow up or arrow left, move to the previous radio\n            // If we're on the first radio, move to the last radio\n            if (['ArrowUp', 'ArrowLeft'].includes(ev.key)) {\n                next = (index === 0)\n                    ? radios[radios.length - 1]\n                    : radios[index - 1];\n            }\n            if (next && radios.includes(next)) {\n                next.setFocus();\n                if (!inSelectPopover) {\n                    this.value = next.value;\n                }\n            }\n        }\n    }\n    render() {\n        return (h(Host, { role: \"radiogroup\", \"aria-labelledby\": this.labelId, onClick: this.onClick, class: getIonMode(this) }));\n    }\n    get el() { return getElement(this); }\n    static get watchers() { return {\n        \"value\": [\"valueChanged\"]\n    }; }\n};\nlet radioGroupIds = 0;\n\nexport { Radio as ion_radio, RadioGroup as ion_radio_group };\n"],"sourceRoot":"webpack:///"}