{"ast":null,"code":"import _defineProperty from \"D:/Recaudooffline V.1.0.1/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"D:/Recaudooffline V.1.0.1/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:/Recaudooffline V.1.0.1/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { r as registerInstance, e as createEvent, h, H as Host, i as getElement } from './index-e806d1f6.js';\nimport { b as getIonMode } from './ionic-global-9d5c8ee3.js';\nvar splitPaneIosCss = \":host{--side-width:100%;left:0;right:0;top:0;bottom:0;display:-ms-flexbox;display:flex;position:absolute;-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:nowrap;flex-wrap:nowrap;contain:strict}::slotted(ion-menu.menu-pane-visible){-ms-flex:0 1 auto;flex:0 1 auto;width:var(--side-width);min-width:var(--side-min-width);max-width:var(--side-max-width)}:host(.split-pane-visible) ::slotted(.split-pane-side),:host(.split-pane-visible) ::slotted(.split-pane-main){left:0;right:0;top:0;bottom:0;position:relative;-webkit-box-shadow:none !important;box-shadow:none !important;z-index:0}:host(.split-pane-visible) ::slotted(.split-pane-main){-ms-flex:1;flex:1}:host(.split-pane-visible) ::slotted(.split-pane-side:not(ion-menu)),:host(.split-pane-visible) ::slotted(ion-menu.split-pane-side.menu-enabled){display:-ms-flexbox;display:flex;-ms-flex-negative:0;flex-shrink:0}::slotted(.split-pane-side:not(ion-menu)){display:none}:host(.split-pane-visible) ::slotted(.split-pane-side){-ms-flex-order:-1;order:-1}:host(.split-pane-visible) ::slotted(.split-pane-side[side=end]){-ms-flex-order:1;order:1}:host{--border:0.55px solid var(--ion-item-border-color, var(--ion-border-color, var(--ion-color-step-250, #c8c7cc)));--side-min-width:270px;--side-max-width:28%}:host(.split-pane-visible) ::slotted(.split-pane-side){border-left:0;border-right:var(--border);border-top:0;border-bottom:0;min-width:var(--side-min-width);max-width:var(--side-max-width)}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.split-pane-visible) ::slotted(.split-pane-side){border-left:unset;border-right:unset;-webkit-border-start:0;border-inline-start:0;-webkit-border-end:var(--border);border-inline-end:var(--border)}}:host(.split-pane-visible) ::slotted(.split-pane-side[side=end]){border-left:var(--border);border-right:0;border-top:0;border-bottom:0;min-width:var(--side-min-width);max-width:var(--side-max-width)}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.split-pane-visible) ::slotted(.split-pane-side[side=end]){border-left:unset;border-right:unset;-webkit-border-start:var(--border);border-inline-start:var(--border);-webkit-border-end:0;border-inline-end:0}}\";\nvar splitPaneMdCss = \":host{--side-width:100%;left:0;right:0;top:0;bottom:0;display:-ms-flexbox;display:flex;position:absolute;-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:nowrap;flex-wrap:nowrap;contain:strict}::slotted(ion-menu.menu-pane-visible){-ms-flex:0 1 auto;flex:0 1 auto;width:var(--side-width);min-width:var(--side-min-width);max-width:var(--side-max-width)}:host(.split-pane-visible) ::slotted(.split-pane-side),:host(.split-pane-visible) ::slotted(.split-pane-main){left:0;right:0;top:0;bottom:0;position:relative;-webkit-box-shadow:none !important;box-shadow:none !important;z-index:0}:host(.split-pane-visible) ::slotted(.split-pane-main){-ms-flex:1;flex:1}:host(.split-pane-visible) ::slotted(.split-pane-side:not(ion-menu)),:host(.split-pane-visible) ::slotted(ion-menu.split-pane-side.menu-enabled){display:-ms-flexbox;display:flex;-ms-flex-negative:0;flex-shrink:0}::slotted(.split-pane-side:not(ion-menu)){display:none}:host(.split-pane-visible) ::slotted(.split-pane-side){-ms-flex-order:-1;order:-1}:host(.split-pane-visible) ::slotted(.split-pane-side[side=end]){-ms-flex-order:1;order:1}:host{--border:1px solid var(--ion-item-border-color, var(--ion-border-color, var(--ion-color-step-150, rgba(0, 0, 0, 0.13))));--side-min-width:270px;--side-max-width:28%}:host(.split-pane-visible) ::slotted(.split-pane-side){border-left:0;border-right:var(--border);border-top:0;border-bottom:0;min-width:var(--side-min-width);max-width:var(--side-max-width)}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.split-pane-visible) ::slotted(.split-pane-side){border-left:unset;border-right:unset;-webkit-border-start:0;border-inline-start:0;-webkit-border-end:var(--border);border-inline-end:var(--border)}}:host(.split-pane-visible) ::slotted(.split-pane-side[side=end]){border-left:var(--border);border-right:0;border-top:0;border-bottom:0;min-width:var(--side-min-width);max-width:var(--side-max-width)}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.split-pane-visible) ::slotted(.split-pane-side[side=end]){border-left:unset;border-right:unset;-webkit-border-start:var(--border);border-inline-start:var(--border);-webkit-border-end:0;border-inline-end:0}}\";\nvar SPLIT_PANE_MAIN = 'split-pane-main';\nvar SPLIT_PANE_SIDE = 'split-pane-side';\nvar QUERY = {\n  'xs': '(min-width: 0px)',\n  'sm': '(min-width: 576px)',\n  'md': '(min-width: 768px)',\n  'lg': '(min-width: 992px)',\n  'xl': '(min-width: 1200px)',\n  'never': ''\n};\n\nvar SplitPane = /*#__PURE__*/function () {\n  function SplitPane(hostRef) {\n    _classCallCheck(this, SplitPane);\n\n    registerInstance(this, hostRef);\n    this.ionSplitPaneVisible = createEvent(this, \"ionSplitPaneVisible\", 7);\n    this.visible = false;\n    /**\n     * If `true`, the split pane will be hidden.\n     */\n\n    this.disabled = false;\n    /**\n     * When the split-pane should be shown.\n     * Can be a CSS media query expression, or a shortcut expression.\n     * Can also be a boolean expression.\n     */\n\n    this.when = QUERY['lg'];\n  }\n\n  _createClass(SplitPane, [{\n    key: \"visibleChanged\",\n    value: function visibleChanged(visible) {\n      var detail = {\n        visible: visible,\n        isPane: this.isPane.bind(this)\n      };\n      this.ionSplitPaneVisible.emit(detail);\n    }\n  }, {\n    key: \"connectedCallback\",\n    value: function connectedCallback() {\n      this.styleChildren();\n      this.updateState();\n    }\n  }, {\n    key: \"disconnectedCallback\",\n    value: function disconnectedCallback() {\n      if (this.rmL) {\n        this.rmL();\n        this.rmL = undefined;\n      }\n    }\n  }, {\n    key: \"updateState\",\n    value: function updateState() {\n      var _this = this;\n\n      if (this.rmL) {\n        this.rmL();\n        this.rmL = undefined;\n      } // Check if the split-pane is disabled\n\n\n      if (this.disabled) {\n        this.visible = false;\n        return;\n      } // When query is a boolean\n\n\n      var query = this.when;\n\n      if (typeof query === 'boolean') {\n        this.visible = query;\n        return;\n      } // When query is a string, let's find first if it is a shortcut\n\n\n      var mediaQuery = QUERY[query] || query; // Media query is empty or null, we hide it\n\n      if (mediaQuery.length === 0) {\n        this.visible = false;\n        return;\n      }\n\n      if (window.matchMedia) {\n        // Listen on media query\n        var callback = function callback(q) {\n          _this.visible = q.matches;\n        };\n\n        var mediaList = window.matchMedia(mediaQuery);\n        mediaList.addListener(callback);\n\n        this.rmL = function () {\n          return mediaList.removeListener(callback);\n        };\n\n        this.visible = mediaList.matches;\n      }\n    }\n  }, {\n    key: \"isPane\",\n    value: function isPane(element) {\n      if (!this.visible) {\n        return false;\n      }\n\n      return element.parentElement === this.el && element.classList.contains(SPLIT_PANE_SIDE);\n    }\n  }, {\n    key: \"styleChildren\",\n    value: function styleChildren() {\n      var contentId = this.contentId;\n      var children = this.el.children;\n      var nu = this.el.childElementCount;\n      var foundMain = false;\n\n      for (var i = 0; i < nu; i++) {\n        var child = children[i];\n        var isMain = contentId !== undefined && child.id === contentId;\n\n        if (isMain) {\n          if (foundMain) {\n            console.warn('split pane cannot have more than one main node');\n            return;\n          }\n\n          foundMain = true;\n        }\n\n        setPaneClass(child, isMain);\n      }\n\n      if (!foundMain) {\n        console.warn('split pane does not have a specified main node');\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _class;\n\n      var mode = getIonMode(this);\n      return h(Host, {\n        class: (_class = {}, _defineProperty(_class, mode, true), _defineProperty(_class, \"split-pane-\".concat(mode), true), _defineProperty(_class, 'split-pane-visible', this.visible), _class)\n      }, h(\"slot\", null));\n    }\n  }, {\n    key: \"el\",\n    get: function get() {\n      return getElement(this);\n    }\n  }], [{\n    key: \"watchers\",\n    get: function get() {\n      return {\n        \"visible\": [\"visibleChanged\"],\n        \"disabled\": [\"updateState\"],\n        \"when\": [\"updateState\"]\n      };\n    }\n  }]);\n\n  return SplitPane;\n}();\n\nvar setPaneClass = function setPaneClass(el, isMain) {\n  var toAdd;\n  var toRemove;\n\n  if (isMain) {\n    toAdd = SPLIT_PANE_MAIN;\n    toRemove = SPLIT_PANE_SIDE;\n  } else {\n    toAdd = SPLIT_PANE_SIDE;\n    toRemove = SPLIT_PANE_MAIN;\n  }\n\n  var classList = el.classList;\n  classList.add(toAdd);\n  classList.remove(toRemove);\n};\n\nSplitPane.style = {\n  ios: splitPaneIosCss,\n  md: splitPaneMdCss\n};\nexport { SplitPane as ion_split_pane };","map":{"version":3,"sources":["D:/Recaudooffline V.1.0.1/node_modules/@ionic/core/dist/esm/ion-split-pane.entry.js"],"names":["r","registerInstance","e","createEvent","h","H","Host","i","getElement","b","getIonMode","splitPaneIosCss","splitPaneMdCss","SPLIT_PANE_MAIN","SPLIT_PANE_SIDE","QUERY","SplitPane","hostRef","ionSplitPaneVisible","visible","disabled","when","detail","isPane","bind","emit","styleChildren","updateState","rmL","undefined","query","mediaQuery","length","window","matchMedia","callback","q","matches","mediaList","addListener","removeListener","element","parentElement","el","classList","contains","contentId","children","nu","childElementCount","foundMain","child","isMain","id","console","warn","setPaneClass","mode","class","toAdd","toRemove","add","remove","style","ios","md","ion_split_pane"],"mappings":";;;AAAA,SAASA,CAAC,IAAIC,gBAAd,EAAgCC,CAAC,IAAIC,WAArC,EAAkDC,CAAlD,EAAqDC,CAAC,IAAIC,IAA1D,EAAgEC,CAAC,IAAIC,UAArE,QAAuF,qBAAvF;AACA,SAASC,CAAC,IAAIC,UAAd,QAAgC,4BAAhC;AAEA,IAAMC,eAAe,GAAG,ktEAAxB;AAEA,IAAMC,cAAc,GAAG,2tEAAvB;AAEA,IAAMC,eAAe,GAAG,iBAAxB;AACA,IAAMC,eAAe,GAAG,iBAAxB;AACA,IAAMC,KAAK,GAAG;AACZ,QAAM,kBADM;AAEZ,QAAM,oBAFM;AAGZ,QAAM,oBAHM;AAIZ,QAAM,oBAJM;AAKZ,QAAM,qBALM;AAMZ,WAAS;AANG,CAAd;;AAQA,IAAMC,SAAS;AACb,qBAAYC,OAAZ,EAAqB;AAAA;;AACnBhB,IAAAA,gBAAgB,CAAC,IAAD,EAAOgB,OAAP,CAAhB;AACA,SAAKC,mBAAL,GAA2Bf,WAAW,CAAC,IAAD,EAAO,qBAAP,EAA8B,CAA9B,CAAtC;AACA,SAAKgB,OAAL,GAAe,KAAf;AACA;AACJ;AACA;;AACI,SAAKC,QAAL,GAAgB,KAAhB;AACA;AACJ;AACA;AACA;AACA;;AACI,SAAKC,IAAL,GAAYN,KAAK,CAAC,IAAD,CAAjB;AACD;;AAfY;AAAA;AAAA,WAgBb,wBAAeI,OAAf,EAAwB;AACtB,UAAMG,MAAM,GAAG;AAAEH,QAAAA,OAAO,EAAPA,OAAF;AAAWI,QAAAA,MAAM,EAAE,KAAKA,MAAL,CAAYC,IAAZ,CAAiB,IAAjB;AAAnB,OAAf;AACA,WAAKN,mBAAL,CAAyBO,IAAzB,CAA8BH,MAA9B;AACD;AAnBY;AAAA;AAAA,WAoBb,6BAAoB;AAClB,WAAKI,aAAL;AACA,WAAKC,WAAL;AACD;AAvBY;AAAA;AAAA,WAwBb,gCAAuB;AACrB,UAAI,KAAKC,GAAT,EAAc;AACZ,aAAKA,GAAL;AACA,aAAKA,GAAL,GAAWC,SAAX;AACD;AACF;AA7BY;AAAA;AAAA,WA8Bb,uBAAc;AAAA;;AACZ,UAAI,KAAKD,GAAT,EAAc;AACZ,aAAKA,GAAL;AACA,aAAKA,GAAL,GAAWC,SAAX;AACD,OAJW,CAKZ;;;AACA,UAAI,KAAKT,QAAT,EAAmB;AACjB,aAAKD,OAAL,GAAe,KAAf;AACA;AACD,OATW,CAUZ;;;AACA,UAAMW,KAAK,GAAG,KAAKT,IAAnB;;AACA,UAAI,OAAOS,KAAP,KAAiB,SAArB,EAAgC;AAC9B,aAAKX,OAAL,GAAeW,KAAf;AACA;AACD,OAfW,CAgBZ;;;AACA,UAAMC,UAAU,GAAGhB,KAAK,CAACe,KAAD,CAAL,IAAgBA,KAAnC,CAjBY,CAkBZ;;AACA,UAAIC,UAAU,CAACC,MAAX,KAAsB,CAA1B,EAA6B;AAC3B,aAAKb,OAAL,GAAe,KAAf;AACA;AACD;;AACD,UAAIc,MAAM,CAACC,UAAX,EAAuB;AACrB;AACA,YAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,CAAD,EAAO;AACtB,UAAA,KAAI,CAACjB,OAAL,GAAeiB,CAAC,CAACC,OAAjB;AACD,SAFD;;AAGA,YAAMC,SAAS,GAAGL,MAAM,CAACC,UAAP,CAAkBH,UAAlB,CAAlB;AACAO,QAAAA,SAAS,CAACC,WAAV,CAAsBJ,QAAtB;;AACA,aAAKP,GAAL,GAAW;AAAA,iBAAMU,SAAS,CAACE,cAAV,CAAyBL,QAAzB,CAAN;AAAA,SAAX;;AACA,aAAKhB,OAAL,GAAemB,SAAS,CAACD,OAAzB;AACD;AACF;AA/DY;AAAA;AAAA,WAgEb,gBAAOI,OAAP,EAAgB;AACd,UAAI,CAAC,KAAKtB,OAAV,EAAmB;AACjB,eAAO,KAAP;AACD;;AACD,aAAOsB,OAAO,CAACC,aAAR,KAA0B,KAAKC,EAA/B,IACFF,OAAO,CAACG,SAAR,CAAkBC,QAAlB,CAA2B/B,eAA3B,CADL;AAED;AAtEY;AAAA;AAAA,WAuEb,yBAAgB;AACd,UAAMgC,SAAS,GAAG,KAAKA,SAAvB;AACA,UAAMC,QAAQ,GAAG,KAAKJ,EAAL,CAAQI,QAAzB;AACA,UAAMC,EAAE,GAAG,KAAKL,EAAL,CAAQM,iBAAnB;AACA,UAAIC,SAAS,GAAG,KAAhB;;AACA,WAAK,IAAI3C,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGyC,EAApB,EAAwBzC,CAAC,EAAzB,EAA6B;AAC3B,YAAM4C,KAAK,GAAGJ,QAAQ,CAACxC,CAAD,CAAtB;AACA,YAAM6C,MAAM,GAAGN,SAAS,KAAKjB,SAAd,IAA2BsB,KAAK,CAACE,EAAN,KAAaP,SAAvD;;AACA,YAAIM,MAAJ,EAAY;AACV,cAAIF,SAAJ,EAAe;AACbI,YAAAA,OAAO,CAACC,IAAR,CAAa,gDAAb;AACA;AACD;;AACDL,UAAAA,SAAS,GAAG,IAAZ;AACD;;AACDM,QAAAA,YAAY,CAACL,KAAD,EAAQC,MAAR,CAAZ;AACD;;AACD,UAAI,CAACF,SAAL,EAAgB;AACdI,QAAAA,OAAO,CAACC,IAAR,CAAa,gDAAb;AACD;AACF;AA3FY;AAAA;AAAA,WA4Fb,kBAAS;AAAA;;AACP,UAAME,IAAI,GAAG/C,UAAU,CAAC,IAAD,CAAvB;AACA,aAAQN,CAAC,CAACE,IAAD,EAAO;AAAEoD,QAAAA,KAAK,wCAClBD,IADkB,EACX,IADW,gDAGJA,IAHI,GAGK,IAHL,2BAInB,oBAJmB,EAIG,KAAKtC,OAJR;AAAP,OAAP,EAKFf,CAAC,CAAC,MAAD,EAAS,IAAT,CALC,CAAT;AAMD;AApGY;AAAA;AAAA,SAqGb,eAAS;AAAE,aAAOI,UAAU,CAAC,IAAD,CAAjB;AAA0B;AArGxB;AAAA;AAAA,SAsGb,eAAsB;AAAE,aAAO;AAC7B,mBAAW,CAAC,gBAAD,CADkB;AAE7B,oBAAY,CAAC,aAAD,CAFiB;AAG7B,gBAAQ,CAAC,aAAD;AAHqB,OAAP;AAIpB;AA1GS;;AAAA;AAAA,GAAf;;AA4GA,IAAMgD,YAAY,GAAG,SAAfA,YAAe,CAACb,EAAD,EAAKS,MAAL,EAAgB;AACnC,MAAIO,KAAJ;AACA,MAAIC,QAAJ;;AACA,MAAIR,MAAJ,EAAY;AACVO,IAAAA,KAAK,GAAG9C,eAAR;AACA+C,IAAAA,QAAQ,GAAG9C,eAAX;AACD,GAHD,MAIK;AACH6C,IAAAA,KAAK,GAAG7C,eAAR;AACA8C,IAAAA,QAAQ,GAAG/C,eAAX;AACD;;AACD,MAAM+B,SAAS,GAAGD,EAAE,CAACC,SAArB;AACAA,EAAAA,SAAS,CAACiB,GAAV,CAAcF,KAAd;AACAf,EAAAA,SAAS,CAACkB,MAAV,CAAiBF,QAAjB;AACD,CAdD;;AAeA5C,SAAS,CAAC+C,KAAV,GAAkB;AAChBC,EAAAA,GAAG,EAAErD,eADW;AAEhBsD,EAAAA,EAAE,EAAErD;AAFY,CAAlB;AAKA,SAASI,SAAS,IAAIkD,cAAtB","sourcesContent":["import { r as registerInstance, e as createEvent, h, H as Host, i as getElement } from './index-e806d1f6.js';\nimport { b as getIonMode } from './ionic-global-9d5c8ee3.js';\n\nconst splitPaneIosCss = \":host{--side-width:100%;left:0;right:0;top:0;bottom:0;display:-ms-flexbox;display:flex;position:absolute;-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:nowrap;flex-wrap:nowrap;contain:strict}::slotted(ion-menu.menu-pane-visible){-ms-flex:0 1 auto;flex:0 1 auto;width:var(--side-width);min-width:var(--side-min-width);max-width:var(--side-max-width)}:host(.split-pane-visible) ::slotted(.split-pane-side),:host(.split-pane-visible) ::slotted(.split-pane-main){left:0;right:0;top:0;bottom:0;position:relative;-webkit-box-shadow:none !important;box-shadow:none !important;z-index:0}:host(.split-pane-visible) ::slotted(.split-pane-main){-ms-flex:1;flex:1}:host(.split-pane-visible) ::slotted(.split-pane-side:not(ion-menu)),:host(.split-pane-visible) ::slotted(ion-menu.split-pane-side.menu-enabled){display:-ms-flexbox;display:flex;-ms-flex-negative:0;flex-shrink:0}::slotted(.split-pane-side:not(ion-menu)){display:none}:host(.split-pane-visible) ::slotted(.split-pane-side){-ms-flex-order:-1;order:-1}:host(.split-pane-visible) ::slotted(.split-pane-side[side=end]){-ms-flex-order:1;order:1}:host{--border:0.55px solid var(--ion-item-border-color, var(--ion-border-color, var(--ion-color-step-250, #c8c7cc)));--side-min-width:270px;--side-max-width:28%}:host(.split-pane-visible) ::slotted(.split-pane-side){border-left:0;border-right:var(--border);border-top:0;border-bottom:0;min-width:var(--side-min-width);max-width:var(--side-max-width)}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.split-pane-visible) ::slotted(.split-pane-side){border-left:unset;border-right:unset;-webkit-border-start:0;border-inline-start:0;-webkit-border-end:var(--border);border-inline-end:var(--border)}}:host(.split-pane-visible) ::slotted(.split-pane-side[side=end]){border-left:var(--border);border-right:0;border-top:0;border-bottom:0;min-width:var(--side-min-width);max-width:var(--side-max-width)}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.split-pane-visible) ::slotted(.split-pane-side[side=end]){border-left:unset;border-right:unset;-webkit-border-start:var(--border);border-inline-start:var(--border);-webkit-border-end:0;border-inline-end:0}}\";\n\nconst splitPaneMdCss = \":host{--side-width:100%;left:0;right:0;top:0;bottom:0;display:-ms-flexbox;display:flex;position:absolute;-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:nowrap;flex-wrap:nowrap;contain:strict}::slotted(ion-menu.menu-pane-visible){-ms-flex:0 1 auto;flex:0 1 auto;width:var(--side-width);min-width:var(--side-min-width);max-width:var(--side-max-width)}:host(.split-pane-visible) ::slotted(.split-pane-side),:host(.split-pane-visible) ::slotted(.split-pane-main){left:0;right:0;top:0;bottom:0;position:relative;-webkit-box-shadow:none !important;box-shadow:none !important;z-index:0}:host(.split-pane-visible) ::slotted(.split-pane-main){-ms-flex:1;flex:1}:host(.split-pane-visible) ::slotted(.split-pane-side:not(ion-menu)),:host(.split-pane-visible) ::slotted(ion-menu.split-pane-side.menu-enabled){display:-ms-flexbox;display:flex;-ms-flex-negative:0;flex-shrink:0}::slotted(.split-pane-side:not(ion-menu)){display:none}:host(.split-pane-visible) ::slotted(.split-pane-side){-ms-flex-order:-1;order:-1}:host(.split-pane-visible) ::slotted(.split-pane-side[side=end]){-ms-flex-order:1;order:1}:host{--border:1px solid var(--ion-item-border-color, var(--ion-border-color, var(--ion-color-step-150, rgba(0, 0, 0, 0.13))));--side-min-width:270px;--side-max-width:28%}:host(.split-pane-visible) ::slotted(.split-pane-side){border-left:0;border-right:var(--border);border-top:0;border-bottom:0;min-width:var(--side-min-width);max-width:var(--side-max-width)}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.split-pane-visible) ::slotted(.split-pane-side){border-left:unset;border-right:unset;-webkit-border-start:0;border-inline-start:0;-webkit-border-end:var(--border);border-inline-end:var(--border)}}:host(.split-pane-visible) ::slotted(.split-pane-side[side=end]){border-left:var(--border);border-right:0;border-top:0;border-bottom:0;min-width:var(--side-min-width);max-width:var(--side-max-width)}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.split-pane-visible) ::slotted(.split-pane-side[side=end]){border-left:unset;border-right:unset;-webkit-border-start:var(--border);border-inline-start:var(--border);-webkit-border-end:0;border-inline-end:0}}\";\n\nconst SPLIT_PANE_MAIN = 'split-pane-main';\nconst SPLIT_PANE_SIDE = 'split-pane-side';\nconst QUERY = {\n  'xs': '(min-width: 0px)',\n  'sm': '(min-width: 576px)',\n  'md': '(min-width: 768px)',\n  'lg': '(min-width: 992px)',\n  'xl': '(min-width: 1200px)',\n  'never': ''\n};\nconst SplitPane = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.ionSplitPaneVisible = createEvent(this, \"ionSplitPaneVisible\", 7);\n    this.visible = false;\n    /**\n     * If `true`, the split pane will be hidden.\n     */\n    this.disabled = false;\n    /**\n     * When the split-pane should be shown.\n     * Can be a CSS media query expression, or a shortcut expression.\n     * Can also be a boolean expression.\n     */\n    this.when = QUERY['lg'];\n  }\n  visibleChanged(visible) {\n    const detail = { visible, isPane: this.isPane.bind(this) };\n    this.ionSplitPaneVisible.emit(detail);\n  }\n  connectedCallback() {\n    this.styleChildren();\n    this.updateState();\n  }\n  disconnectedCallback() {\n    if (this.rmL) {\n      this.rmL();\n      this.rmL = undefined;\n    }\n  }\n  updateState() {\n    if (this.rmL) {\n      this.rmL();\n      this.rmL = undefined;\n    }\n    // Check if the split-pane is disabled\n    if (this.disabled) {\n      this.visible = false;\n      return;\n    }\n    // When query is a boolean\n    const query = this.when;\n    if (typeof query === 'boolean') {\n      this.visible = query;\n      return;\n    }\n    // When query is a string, let's find first if it is a shortcut\n    const mediaQuery = QUERY[query] || query;\n    // Media query is empty or null, we hide it\n    if (mediaQuery.length === 0) {\n      this.visible = false;\n      return;\n    }\n    if (window.matchMedia) {\n      // Listen on media query\n      const callback = (q) => {\n        this.visible = q.matches;\n      };\n      const mediaList = window.matchMedia(mediaQuery);\n      mediaList.addListener(callback);\n      this.rmL = () => mediaList.removeListener(callback);\n      this.visible = mediaList.matches;\n    }\n  }\n  isPane(element) {\n    if (!this.visible) {\n      return false;\n    }\n    return element.parentElement === this.el\n      && element.classList.contains(SPLIT_PANE_SIDE);\n  }\n  styleChildren() {\n    const contentId = this.contentId;\n    const children = this.el.children;\n    const nu = this.el.childElementCount;\n    let foundMain = false;\n    for (let i = 0; i < nu; i++) {\n      const child = children[i];\n      const isMain = contentId !== undefined && child.id === contentId;\n      if (isMain) {\n        if (foundMain) {\n          console.warn('split pane cannot have more than one main node');\n          return;\n        }\n        foundMain = true;\n      }\n      setPaneClass(child, isMain);\n    }\n    if (!foundMain) {\n      console.warn('split pane does not have a specified main node');\n    }\n  }\n  render() {\n    const mode = getIonMode(this);\n    return (h(Host, { class: {\n        [mode]: true,\n        // Used internally for styling\n        [`split-pane-${mode}`]: true,\n        'split-pane-visible': this.visible\n      } }, h(\"slot\", null)));\n  }\n  get el() { return getElement(this); }\n  static get watchers() { return {\n    \"visible\": [\"visibleChanged\"],\n    \"disabled\": [\"updateState\"],\n    \"when\": [\"updateState\"]\n  }; }\n};\nconst setPaneClass = (el, isMain) => {\n  let toAdd;\n  let toRemove;\n  if (isMain) {\n    toAdd = SPLIT_PANE_MAIN;\n    toRemove = SPLIT_PANE_SIDE;\n  }\n  else {\n    toAdd = SPLIT_PANE_SIDE;\n    toRemove = SPLIT_PANE_MAIN;\n  }\n  const classList = el.classList;\n  classList.add(toAdd);\n  classList.remove(toRemove);\n};\nSplitPane.style = {\n  ios: splitPaneIosCss,\n  md: splitPaneMdCss\n};\n\nexport { SplitPane as ion_split_pane };\n"]},"metadata":{},"sourceType":"module"}