{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { Injectable } from '@angular/core';\nimport { IonicNativePlugin, cordova } from '@ionic-native/core';\nimport * as ɵngcc0 from '@angular/core';\n\nvar NativeStorage =\n/** @class */\nfunction (_super) {\n  __extends(NativeStorage, _super);\n\n  function NativeStorage() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  NativeStorage.prototype.initWithSuiteName = function (reference) {\n    return cordova(this, \"initWithSuiteName\", {\n      \"platforms\": [\"iOS\"]\n    }, arguments);\n  };\n\n  NativeStorage.prototype.setItem = function (reference, value) {\n    return cordova(this, \"setItem\", {}, arguments);\n  };\n\n  NativeStorage.prototype.getItem = function (reference) {\n    return cordova(this, \"getItem\", {}, arguments);\n  };\n\n  NativeStorage.prototype.keys = function () {\n    return cordova(this, \"keys\", {}, arguments);\n  };\n\n  NativeStorage.prototype.remove = function (reference) {\n    return cordova(this, \"remove\", {}, arguments);\n  };\n\n  NativeStorage.prototype.clear = function () {\n    return cordova(this, \"clear\", {}, arguments);\n  };\n\n  NativeStorage.pluginName = \"NativeStorage\";\n  NativeStorage.plugin = \"cordova-plugin-nativestorage\";\n  NativeStorage.pluginRef = \"NativeStorage\";\n  NativeStorage.repo = \"https://github.com/TheCocoaProject/cordova-plugin-nativestorage\";\n  NativeStorage.platforms = [\"Android\", \"Browser\", \"iOS\", \"macOS\", \"Windows\"];\n\n  NativeStorage.ɵfac = function NativeStorage_Factory(t) {\n    return ɵNativeStorage_BaseFactory(t || NativeStorage);\n  };\n\n  NativeStorage.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n    token: NativeStorage,\n    factory: function factory(t) {\n      return NativeStorage.ɵfac(t);\n    }\n  });\n  var ɵNativeStorage_BaseFactory = /*@__PURE__*/ɵngcc0.ɵɵgetInheritedFactory(NativeStorage);\n\n  (function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NativeStorage, [{\n      type: Injectable\n    }], null, null);\n  })();\n\n  return NativeStorage;\n}(IonicNativePlugin);\n\nexport { NativeStorage };","map":{"version":3,"sources":["../../../../../src/@ionic-native/plugins/native-storage/ngx/index.ts"],"names":[],"mappings":";AAAA,SAAS,UAAT,QAA2B,eAA3B;AACA,SAAO,iBAAP,EAAO,OAAP,QAAmD,oBAAnD;;;AACA,IAAA,aAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAmCmC,EAAA,SAAA,CAAA,aAAA,EAAA,MAAA,CAAA;;AAAkB,WAAA,aAAA,GAAA;AAE9B,WAAA,MAAA,KAAA,IAAA,IAAA,MAAA,CAAA,KAAA,CAAA,IAAA,EAAA,SAAA,CAAA,IAAA,IAAA;AACR;;AAMb,EAAA,aAAA,CAAA,SAAA,CAAA,iBAAA,GAAiB,UAAC,SAAD,EAAkB;AAAA,WAAA,OAAA,CAAA,IAAA,EAAA,mBAAA,EAAA;AAAA,mBAAA,CAAA,KAAA;AAAA,KAAA,EAAA,SAAA,CAAA;AAAA,GAAnC;;AAWA,EAAA,aAAA,CAAA,SAAA,CAAA,OAAA,GAAO,UAAC,SAAD,EAAoB,KAApB,EAA8B;AAAA,WAAA,OAAA,CAAA,IAAA,EAAA,SAAA,EAAA,EAAA,EAAA,SAAA,CAAA;AAAA,GAArC;;AAUA,EAAA,aAAA,CAAA,SAAA,CAAA,OAAA,GAAO,UAAC,SAAD,EAAkB;AAAA,WAAA,OAAA,CAAA,IAAA,EAAA,SAAA,EAAA,EAAA,EAAA,SAAA,CAAA;AAAA,GAAzB;;AASA,EAAA,aAAA,CAAA,SAAA,CAAA,IAAA,GAAI,YAAA;AAAA,WAAA,OAAA,CAAA,IAAA,EAAA,MAAA,EAAA,EAAA,EAAA,SAAA,CAAA;AAAA,GAAJ;;AAUA,EAAA,aAAA,CAAA,SAAA,CAAA,MAAA,GAAM,UAAC,SAAD,EAAkB;AAAA,WAAA,OAAA,CAAA,IAAA,EAAA,QAAA,EAAA,EAAA,EAAA,SAAA,CAAA;AAAA,GAAxB;;AASA,EAAA,aAAA,CAAA,SAAA,CAAA,KAAA,GAAK,YAAA;AAAA,WAAA,OAAA,CAAA,IAAA,EAAA,OAAA,EAAA,EAAA,EAAA,SAAA,CAAA;AAAA,GAAL;;AAI2B,EAAA,aAAA,CAAA,UAAA,GAAA,eAAA;AAAgD,EAAA,aAAA,CAAA,MAAA,GAAA,8BAAA;AAA2D,EAAA,aAAA,CAAA,SAAA,GAAA,eAAA;AAA+C,EAAA,aAAA,CAAA,IAAA,GAAA,iEAAA;AAA4F,EAAA,aAAA,CAAA,SAAA,GAAA,CAAA,SAAA,EAAA,SAAA,EAAA,KAAA,EAAA,OAAA,EAAA,SAAA,CAAA;;gCA/DlR,qB,CAAA,C,EAAA;AAAA,WAAU,0BAAA,CAAA,CAAA,IAAA,aAAA,CAAV;AAAU,G;;;;;;;;;;;;;;AACL,G;;AAAC,SArCP,aAqCO;AArCL,CAEF,CAmCmC,iBAnCnC,CAAA;;AAoCC,SADY,aACZ","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Cordova, IonicNativePlugin, Plugin } from '@ionic-native/core';\n\n/**\n * @name Native Storage\n * @premier nativestorage\n * @description Native storage of variables in Android and iOS\n *\n * @usage\n * ```typescript\n * import { NativeStorage } from '@ionic-native/native-storage/ngx';\n *\n * constructor(private nativeStorage: NativeStorage) { }\n *\n * ...\n *\n * this.nativeStorage.setItem('myitem', {property: 'value', anotherProperty: 'anotherValue'})\n *   .then(\n *     () => console.log('Stored item!'),\n *     error => console.error('Error storing item', error)\n *   );\n *\n * this.nativeStorage.getItem('myitem')\n *   .then(\n *     data => console.log(data),\n *     error => console.error(error)\n *   );\n * ```\n */\n@Plugin({\n  pluginName: 'NativeStorage',\n  plugin: 'cordova-plugin-nativestorage',\n  pluginRef: 'NativeStorage',\n  repo: 'https://github.com/TheCocoaProject/cordova-plugin-nativestorage',\n  platforms: ['Android', 'Browser', 'iOS', 'macOS', 'Windows'],\n})\n@Injectable()\nexport class NativeStorage extends IonicNativePlugin {\n  /**\n   * Initialises shared storage with the suite name when using app groups in iOS\n   * @param reference {string}\n   * @returns {Promise<void>}\n   */\n  @Cordova({\n    platforms: ['iOS'],\n  })\n  initWithSuiteName(reference: string): Promise<void> {\n    return;\n  }\n\n  /**\n   * Stores a value\n   * @param reference {string}\n   * @param value\n   * @returns {Promise<any>}\n   */\n  @Cordova()\n  setItem(reference: string, value: any): Promise<any> {\n    return;\n  }\n\n  /**\n   * Gets a stored item\n   * @param reference {string}\n   * @returns {Promise<any>}\n   */\n  @Cordova()\n  getItem(reference: string): Promise<any> {\n    return;\n  }\n\n  /**\n   * Retrieving all keys\n   * @returns {Promise<any>}\n   */\n  @Cordova()\n  keys(): Promise<any> {\n    return;\n  }\n\n  /**\n   * Removes a single stored item\n   * @param reference {string}\n   * @returns {Promise<any>}\n   */\n  @Cordova()\n  remove(reference: string): Promise<any> {\n    return;\n  }\n\n  /**\n   * Removes all stored values.\n   * @returns {Promise<any>}\n   */\n  @Cordova()\n  clear(): Promise<any> {\n    return;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}