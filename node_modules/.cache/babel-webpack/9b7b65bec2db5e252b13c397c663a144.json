{"ast":null,"code":"import _defineProperty from \"D:/Recaudooffline V.1.0.1/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"D:/Recaudooffline V.1.0.1/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:/Recaudooffline V.1.0.1/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _regeneratorRuntime from \"D:/Recaudooffline V.1.0.1/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"D:/Recaudooffline V.1.0.1/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { c as writeTask, r as registerInstance, e as createEvent, f as readTask, h, i as getElement, H as Host } from './index-e806d1f6.js';\nimport { i as isPlatform, b as getIonMode, c as config } from './ionic-global-9d5c8ee3.js';\nimport { h as clamp, g as getElementRoot, r as raf } from './helpers-90f46169.js';\nimport { c as createAnimation } from './animation-54fe0237.js';\nimport { g as getTimeGivenProgression } from './cubic-bezier-eea9a7a9.js';\nimport { s as sanitizeDOMString } from './index-9e3fe806.js';\nimport { d as hapticImpact } from './haptic-27b3f981.js';\nimport { S as SPINNERS } from './spinner-configs-cd7845af.js';\n\nvar getRefresherAnimationType = function getRefresherAnimationType(contentEl) {\n  var previousSibling = contentEl.previousElementSibling;\n  var hasHeader = previousSibling !== null && previousSibling.tagName === 'ION-HEADER';\n  return hasHeader ? 'translate' : 'scale';\n};\n\nvar createPullingAnimation = function createPullingAnimation(type, pullingSpinner) {\n  return type === 'scale' ? createScaleAnimation(pullingSpinner) : createTranslateAnimation(pullingSpinner);\n};\n\nvar createBaseAnimation = function createBaseAnimation(pullingRefresherIcon) {\n  var spinner = pullingRefresherIcon.querySelector('ion-spinner');\n  var circle = spinner.shadowRoot.querySelector('circle');\n  var spinnerArrowContainer = pullingRefresherIcon.querySelector('.spinner-arrow-container');\n  var arrowContainer = pullingRefresherIcon.querySelector('.arrow-container');\n  var arrow = arrowContainer ? arrowContainer.querySelector('ion-icon') : null;\n  var baseAnimation = createAnimation().duration(1000).easing('ease-out');\n  var spinnerArrowContainerAnimation = createAnimation().addElement(spinnerArrowContainer).keyframes([{\n    offset: 0,\n    opacity: '0.3'\n  }, {\n    offset: 0.45,\n    opacity: '0.3'\n  }, {\n    offset: 0.55,\n    opacity: '1'\n  }, {\n    offset: 1,\n    opacity: '1'\n  }]);\n  var circleInnerAnimation = createAnimation().addElement(circle).keyframes([{\n    offset: 0,\n    strokeDasharray: '1px, 200px'\n  }, {\n    offset: 0.20,\n    strokeDasharray: '1px, 200px'\n  }, {\n    offset: 0.55,\n    strokeDasharray: '100px, 200px'\n  }, {\n    offset: 1,\n    strokeDasharray: '100px, 200px'\n  }]);\n  var circleOuterAnimation = createAnimation().addElement(spinner).keyframes([{\n    offset: 0,\n    transform: 'rotate(-90deg)'\n  }, {\n    offset: 1,\n    transform: 'rotate(210deg)'\n  }]);\n  /**\n   * Only add arrow animation if present\n   * this allows users to customize the spinners\n   * without errors being thrown\n   */\n\n  if (arrowContainer && arrow) {\n    var arrowContainerAnimation = createAnimation().addElement(arrowContainer).keyframes([{\n      offset: 0,\n      transform: 'rotate(0deg)'\n    }, {\n      offset: 0.30,\n      transform: 'rotate(0deg)'\n    }, {\n      offset: 0.55,\n      transform: 'rotate(280deg)'\n    }, {\n      offset: 1,\n      transform: 'rotate(400deg)'\n    }]);\n    var arrowAnimation = createAnimation().addElement(arrow).keyframes([{\n      offset: 0,\n      transform: 'translateX(2px) scale(0)'\n    }, {\n      offset: 0.30,\n      transform: 'translateX(2px) scale(0)'\n    }, {\n      offset: 0.55,\n      transform: 'translateX(-1.5px) scale(1)'\n    }, {\n      offset: 1,\n      transform: 'translateX(-1.5px) scale(1)'\n    }]);\n    baseAnimation.addAnimation([arrowContainerAnimation, arrowAnimation]);\n  }\n\n  return baseAnimation.addAnimation([spinnerArrowContainerAnimation, circleInnerAnimation, circleOuterAnimation]);\n};\n\nvar createScaleAnimation = function createScaleAnimation(pullingRefresherIcon) {\n  var height = pullingRefresherIcon.clientHeight;\n  var spinnerAnimation = createAnimation().addElement(pullingRefresherIcon).keyframes([{\n    offset: 0,\n    transform: \"scale(0) translateY(-\".concat(height + 20, \"px)\")\n  }, {\n    offset: 1,\n    transform: 'scale(1) translateY(100px)'\n  }]);\n  return createBaseAnimation(pullingRefresherIcon).addAnimation([spinnerAnimation]);\n};\n\nvar createTranslateAnimation = function createTranslateAnimation(pullingRefresherIcon) {\n  var height = pullingRefresherIcon.clientHeight;\n  var spinnerAnimation = createAnimation().addElement(pullingRefresherIcon).keyframes([{\n    offset: 0,\n    transform: \"translateY(-\".concat(height + 20, \"px)\")\n  }, {\n    offset: 1,\n    transform: 'translateY(100px)'\n  }]);\n  return createBaseAnimation(pullingRefresherIcon).addAnimation([spinnerAnimation]);\n};\n\nvar createSnapBackAnimation = function createSnapBackAnimation(pullingRefresherIcon) {\n  return createAnimation().duration(125).addElement(pullingRefresherIcon).fromTo('transform', 'translateY(var(--ion-pulling-refresher-translate, 100px))', 'translateY(0px)');\n}; // iOS Native Refresher\n// -----------------------------\n\n\nvar setSpinnerOpacity = function setSpinnerOpacity(spinner, opacity) {\n  spinner.style.setProperty('opacity', opacity.toString());\n};\n\nvar handleScrollWhilePulling = function handleScrollWhilePulling(spinner, ticks, opacity, currentTickToShow) {\n  writeTask(function () {\n    setSpinnerOpacity(spinner, opacity);\n    ticks.forEach(function (el, i) {\n      return el.style.setProperty('opacity', i <= currentTickToShow ? '0.99' : '0');\n    });\n  });\n};\n\nvar handleScrollWhileRefreshing = function handleScrollWhileRefreshing(spinner, lastVelocityY) {\n  writeTask(function () {\n    // If user pulls down quickly, the spinner should spin faster\n    spinner.style.setProperty('--refreshing-rotation-duration', lastVelocityY >= 1.0 ? '0.5s' : '2s');\n    spinner.style.setProperty('opacity', '1');\n  });\n};\n\nvar translateElement = function translateElement(el, value) {\n  if (!el) {\n    return Promise.resolve();\n  }\n\n  var trans = transitionEndAsync(el, 200);\n  writeTask(function () {\n    el.style.setProperty('transition', '0.2s all ease-out');\n\n    if (value === undefined) {\n      el.style.removeProperty('transform');\n    } else {\n      el.style.setProperty('transform', \"translate3d(0px, \".concat(value, \", 0px)\"));\n    }\n  });\n  return trans;\n}; // Utils\n// -----------------------------\n\n\nvar shouldUseNativeRefresher = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(referenceEl, mode) {\n    var refresherContent, pullingSpinner, refreshingSpinner;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            refresherContent = referenceEl.querySelector('ion-refresher-content');\n\n            if (refresherContent) {\n              _context.next = 3;\n              break;\n            }\n\n            return _context.abrupt(\"return\", Promise.resolve(false));\n\n          case 3:\n            _context.next = 5;\n            return refresherContent.componentOnReady();\n\n          case 5:\n            pullingSpinner = referenceEl.querySelector('ion-refresher-content .refresher-pulling ion-spinner');\n            refreshingSpinner = referenceEl.querySelector('ion-refresher-content .refresher-refreshing ion-spinner');\n            return _context.abrupt(\"return\", pullingSpinner !== null && refreshingSpinner !== null && (mode === 'ios' && isPlatform('mobile') && referenceEl.style.webkitOverflowScrolling !== undefined || mode === 'md'));\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function shouldUseNativeRefresher(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar transitionEndAsync = function transitionEndAsync(el) {\n  var expectedDuration = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  return new Promise(function (resolve) {\n    transitionEnd(el, expectedDuration, resolve);\n  });\n};\n\nvar transitionEnd = function transitionEnd(el) {\n  var expectedDuration = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var callback = arguments.length > 2 ? arguments[2] : undefined;\n  var unRegTrans;\n  var animationTimeout;\n  var opts = {\n    passive: true\n  };\n  var ANIMATION_FALLBACK_TIMEOUT = 500;\n\n  var unregister = function unregister() {\n    if (unRegTrans) {\n      unRegTrans();\n    }\n  };\n\n  var onTransitionEnd = function onTransitionEnd(ev) {\n    if (ev === undefined || el === ev.target) {\n      unregister();\n      callback(ev);\n    }\n  };\n\n  if (el) {\n    el.addEventListener('webkitTransitionEnd', onTransitionEnd, opts);\n    el.addEventListener('transitionend', onTransitionEnd, opts);\n    animationTimeout = setTimeout(onTransitionEnd, expectedDuration + ANIMATION_FALLBACK_TIMEOUT);\n\n    unRegTrans = function unRegTrans() {\n      if (animationTimeout) {\n        clearTimeout(animationTimeout);\n        animationTimeout = undefined;\n      }\n\n      el.removeEventListener('webkitTransitionEnd', onTransitionEnd, opts);\n      el.removeEventListener('transitionend', onTransitionEnd, opts);\n    };\n  }\n\n  return unregister;\n};\n\nvar refresherIosCss = \"ion-refresher{left:0;top:0;display:none;position:absolute;width:100%;height:60px;pointer-events:none;z-index:-1}[dir=rtl] ion-refresher,:host-context([dir=rtl]) ion-refresher{left:unset;right:unset;right:0}ion-refresher.refresher-active{display:block}ion-refresher-content{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:center;justify-content:center;height:100%}.refresher-pulling,.refresher-refreshing{display:none;width:100%}.refresher-pulling-icon,.refresher-refreshing-icon{-webkit-transform-origin:center;transform-origin:center;-webkit-transition:200ms;transition:200ms;font-size:30px;text-align:center}[dir=rtl] .refresher-pulling-icon,:host-context([dir=rtl]) .refresher-pulling-icon,[dir=rtl] .refresher-refreshing-icon,:host-context([dir=rtl]) .refresher-refreshing-icon{-webkit-transform-origin:calc(100% - center);transform-origin:calc(100% - center)}.refresher-pulling-text,.refresher-refreshing-text{font-size:16px;text-align:center}ion-refresher-content .arrow-container{display:none}.refresher-pulling ion-refresher-content .refresher-pulling{display:block}.refresher-ready ion-refresher-content .refresher-pulling{display:block}.refresher-ready ion-refresher-content .refresher-pulling-icon{-webkit-transform:rotate(180deg);transform:rotate(180deg)}.refresher-refreshing ion-refresher-content .refresher-refreshing{display:block}.refresher-cancelling ion-refresher-content .refresher-pulling{display:block}.refresher-cancelling ion-refresher-content .refresher-pulling-icon{-webkit-transform:scale(0);transform:scale(0)}.refresher-completing ion-refresher-content .refresher-refreshing{display:block}.refresher-completing ion-refresher-content .refresher-refreshing-icon{-webkit-transform:scale(0);transform:scale(0)}.refresher-native .refresher-pulling-text,.refresher-native .refresher-refreshing-text{display:none}.refresher-ios .refresher-pulling-icon,.refresher-ios .refresher-refreshing-icon{color:var(--ion-text-color, #000)}.refresher-ios .refresher-pulling-text,.refresher-ios .refresher-refreshing-text{color:var(--ion-text-color, #000)}.refresher-ios .refresher-refreshing .spinner-lines-ios line,.refresher-ios .refresher-refreshing .spinner-lines-small-ios line,.refresher-ios .refresher-refreshing .spinner-crescent circle{stroke:var(--ion-text-color, #000)}.refresher-ios .refresher-refreshing .spinner-bubbles circle,.refresher-ios .refresher-refreshing .spinner-circles circle,.refresher-ios .refresher-refreshing .spinner-dots circle{fill:var(--ion-text-color, #000)}ion-refresher.refresher-native{display:block;z-index:1}ion-refresher.refresher-native ion-spinner{margin-left:auto;margin-right:auto;margin-top:0;margin-bottom:0}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){ion-refresher.refresher-native ion-spinner{margin-left:unset;margin-right:unset;-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto}}.refresher-native .refresher-refreshing ion-spinner{--refreshing-rotation-duration:2s;display:none;-webkit-animation:var(--refreshing-rotation-duration) ease-out refresher-rotate forwards;animation:var(--refreshing-rotation-duration) ease-out refresher-rotate forwards}.refresher-native .refresher-refreshing{display:none;-webkit-animation:250ms linear refresher-pop forwards;animation:250ms linear refresher-pop forwards}.refresher-native.refresher-refreshing .refresher-pulling ion-spinner,.refresher-native.refresher-completing .refresher-pulling ion-spinner{display:none}.refresher-native.refresher-refreshing .refresher-refreshing ion-spinner,.refresher-native.refresher-completing .refresher-refreshing ion-spinner{display:block}.refresher-native.refresher-pulling .refresher-pulling ion-spinner{display:block}.refresher-native.refresher-pulling .refresher-refreshing ion-spinner{display:none}@-webkit-keyframes refresher-pop{0%{-webkit-transform:scale(1);transform:scale(1);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}50%{-webkit-transform:scale(1.2);transform:scale(1.2);-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out}100%{-webkit-transform:scale(1);transform:scale(1)}}@keyframes refresher-pop{0%{-webkit-transform:scale(1);transform:scale(1);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}50%{-webkit-transform:scale(1.2);transform:scale(1.2);-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out}100%{-webkit-transform:scale(1);transform:scale(1)}}@-webkit-keyframes refresher-rotate{from{-webkit-transform:rotate(0deg);transform:rotate(0deg)}to{-webkit-transform:rotate(180deg);transform:rotate(180deg)}}@keyframes refresher-rotate{from{-webkit-transform:rotate(0deg);transform:rotate(0deg)}to{-webkit-transform:rotate(180deg);transform:rotate(180deg)}}\";\nvar refresherMdCss = \"ion-refresher{left:0;top:0;display:none;position:absolute;width:100%;height:60px;pointer-events:none;z-index:-1}[dir=rtl] ion-refresher,:host-context([dir=rtl]) ion-refresher{left:unset;right:unset;right:0}ion-refresher.refresher-active{display:block}ion-refresher-content{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:center;justify-content:center;height:100%}.refresher-pulling,.refresher-refreshing{display:none;width:100%}.refresher-pulling-icon,.refresher-refreshing-icon{-webkit-transform-origin:center;transform-origin:center;-webkit-transition:200ms;transition:200ms;font-size:30px;text-align:center}[dir=rtl] .refresher-pulling-icon,:host-context([dir=rtl]) .refresher-pulling-icon,[dir=rtl] .refresher-refreshing-icon,:host-context([dir=rtl]) .refresher-refreshing-icon{-webkit-transform-origin:calc(100% - center);transform-origin:calc(100% - center)}.refresher-pulling-text,.refresher-refreshing-text{font-size:16px;text-align:center}ion-refresher-content .arrow-container{display:none}.refresher-pulling ion-refresher-content .refresher-pulling{display:block}.refresher-ready ion-refresher-content .refresher-pulling{display:block}.refresher-ready ion-refresher-content .refresher-pulling-icon{-webkit-transform:rotate(180deg);transform:rotate(180deg)}.refresher-refreshing ion-refresher-content .refresher-refreshing{display:block}.refresher-cancelling ion-refresher-content .refresher-pulling{display:block}.refresher-cancelling ion-refresher-content .refresher-pulling-icon{-webkit-transform:scale(0);transform:scale(0)}.refresher-completing ion-refresher-content .refresher-refreshing{display:block}.refresher-completing ion-refresher-content .refresher-refreshing-icon{-webkit-transform:scale(0);transform:scale(0)}.refresher-native .refresher-pulling-text,.refresher-native .refresher-refreshing-text{display:none}.refresher-md .refresher-pulling-icon,.refresher-md .refresher-refreshing-icon{color:var(--ion-text-color, #000)}.refresher-md .refresher-pulling-text,.refresher-md .refresher-refreshing-text{color:var(--ion-text-color, #000)}.refresher-md .refresher-refreshing .spinner-lines-md line,.refresher-md .refresher-refreshing .spinner-lines-small-md line,.refresher-md .refresher-refreshing .spinner-crescent circle{stroke:var(--ion-text-color, #000)}.refresher-md .refresher-refreshing .spinner-bubbles circle,.refresher-md .refresher-refreshing .spinner-circles circle,.refresher-md .refresher-refreshing .spinner-dots circle{fill:var(--ion-text-color, #000)}ion-refresher.refresher-native{display:block;z-index:1}ion-refresher.refresher-native ion-spinner{margin-left:auto;margin-right:auto;margin-top:0;margin-bottom:0;width:24px;height:24px;color:var(--ion-color-primary, #3880ff)}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){ion-refresher.refresher-native ion-spinner{margin-left:unset;margin-right:unset;-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto}}ion-refresher.refresher-native .spinner-arrow-container{display:inherit}ion-refresher.refresher-native .arrow-container{display:block;position:absolute;width:24px;height:24px}ion-refresher.refresher-native .arrow-container ion-icon{margin-left:auto;margin-right:auto;margin-top:0;margin-bottom:0;left:0;right:0;bottom:-4px;position:absolute;color:var(--ion-color-primary, #3880ff);font-size:12px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){ion-refresher.refresher-native .arrow-container ion-icon{margin-left:unset;margin-right:unset;-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto}}ion-refresher.refresher-native.refresher-pulling ion-refresher-content .refresher-pulling,ion-refresher.refresher-native.refresher-ready ion-refresher-content .refresher-pulling{display:-ms-flexbox;display:flex}ion-refresher.refresher-native.refresher-refreshing ion-refresher-content .refresher-refreshing,ion-refresher.refresher-native.refresher-completing ion-refresher-content .refresher-refreshing,ion-refresher.refresher-native.refresher-cancelling ion-refresher-content .refresher-refreshing{display:-ms-flexbox;display:flex}ion-refresher.refresher-native .refresher-pulling-icon{-webkit-transform:translateY(calc(-100% - 10px));transform:translateY(calc(-100% - 10px))}ion-refresher.refresher-native .refresher-pulling-icon,ion-refresher.refresher-native .refresher-refreshing-icon{margin-left:auto;margin-right:auto;margin-top:0;margin-bottom:0;border-radius:100%;padding-left:8px;padding-right:8px;padding-top:8px;padding-bottom:8px;display:-ms-flexbox;display:flex;border:1px solid #ececec;background:white;-webkit-box-shadow:0px 1px 6px rgba(0, 0, 0, 0.1);box-shadow:0px 1px 6px rgba(0, 0, 0, 0.1)}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){ion-refresher.refresher-native .refresher-pulling-icon,ion-refresher.refresher-native .refresher-refreshing-icon{margin-left:unset;margin-right:unset;-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto}}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){ion-refresher.refresher-native .refresher-pulling-icon,ion-refresher.refresher-native .refresher-refreshing-icon{padding-left:unset;padding-right:unset;-webkit-padding-start:8px;padding-inline-start:8px;-webkit-padding-end:8px;padding-inline-end:8px}}\";\n\nvar Refresher = /*#__PURE__*/function () {\n  function Refresher(hostRef) {\n    _classCallCheck(this, Refresher);\n\n    registerInstance(this, hostRef);\n    this.ionRefresh = createEvent(this, \"ionRefresh\", 7);\n    this.ionPull = createEvent(this, \"ionPull\", 7);\n    this.ionStart = createEvent(this, \"ionStart\", 7);\n    this.appliedStyles = false;\n    this.didStart = false;\n    this.progress = 0;\n    this.pointerDown = false;\n    this.needsCompletion = false;\n    this.didRefresh = false;\n    this.lastVelocityY = 0;\n    this.animations = [];\n    this.nativeRefresher = false;\n    /**\n     * The current state which the refresher is in. The refresher's states include:\n     *\n     * - `inactive` - The refresher is not being pulled down or refreshing and is currently hidden.\n     * - `pulling` - The user is actively pulling down the refresher, but has not reached the point yet that if the user lets go, it'll refresh.\n     * - `cancelling` - The user pulled down the refresher and let go, but did not pull down far enough to kick off the `refreshing` state. After letting go, the refresher is in the `cancelling` state while it is closing, and will go back to the `inactive` state once closed.\n     * - `ready` - The user has pulled down the refresher far enough that if they let go, it'll begin the `refreshing` state.\n     * - `refreshing` - The refresher is actively waiting on the async operation to end. Once the refresh handler calls `complete()` it will begin the `completing` state.\n     * - `completing` - The `refreshing` state has finished and the refresher is in the way of closing itself. Once closed, the refresher will go back to the `inactive` state.\n     */\n\n    this.state = 1\n    /* Inactive */\n    ;\n    /**\n     * The minimum distance the user must pull down until the\n     * refresher will go into the `refreshing` state.\n     * Does not apply when the refresher content uses a spinner,\n     * enabling the native refresher.\n     */\n\n    this.pullMin = 60;\n    /**\n     * The maximum distance of the pull until the refresher\n     * will automatically go into the `refreshing` state.\n     * Defaults to the result of `pullMin + 60`.\n     * Does not apply when  the refresher content uses a spinner,\n     * enabling the native refresher.\n     */\n\n    this.pullMax = this.pullMin + 60;\n    /**\n     * Time it takes to close the refresher.\n     * Does not apply when the refresher content uses a spinner,\n     * enabling the native refresher.\n     */\n\n    this.closeDuration = '280ms';\n    /**\n     * Time it takes the refresher to to snap back to the `refreshing` state.\n     * Does not apply when the refresher content uses a spinner,\n     * enabling the native refresher.\n     */\n\n    this.snapbackDuration = '280ms';\n    /**\n     * How much to multiply the pull speed by. To slow the pull animation down,\n     * pass a number less than `1`. To speed up the pull, pass a number greater\n     * than `1`. The default value is `1` which is equal to the speed of the cursor.\n     * If a negative value is passed in, the factor will be `1` instead.\n     *\n     * For example: If the value passed is `1.2` and the content is dragged by\n     * `10` pixels, instead of `10` pixels the content will be pulled by `12` pixels\n     * (an increase of 20 percent). If the value passed is `0.8`, the dragged amount\n     * will be `8` pixels, less than the amount the cursor has moved.\n     *\n     * Does not apply when the refresher content uses a spinner,\n     * enabling the native refresher.\n     */\n\n    this.pullFactor = 1;\n    /**\n     * If `true`, the refresher will be hidden.\n     */\n\n    this.disabled = false;\n  }\n\n  _createClass(Refresher, [{\n    key: \"disabledChanged\",\n    value: function disabledChanged() {\n      if (this.gesture) {\n        this.gesture.enable(!this.disabled);\n      }\n    }\n  }, {\n    key: \"checkNativeRefresher\",\n    value: function () {\n      var _checkNativeRefresher = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var useNativeRefresher, contentEl;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return shouldUseNativeRefresher(this.el, getIonMode(this));\n\n              case 2:\n                useNativeRefresher = _context2.sent;\n\n                if (useNativeRefresher && !this.nativeRefresher) {\n                  contentEl = this.el.closest('ion-content');\n                  this.setupNativeRefresher(contentEl);\n                } else if (!useNativeRefresher) {\n                  this.destroyNativeRefresher();\n                }\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function checkNativeRefresher() {\n        return _checkNativeRefresher.apply(this, arguments);\n      }\n\n      return checkNativeRefresher;\n    }()\n  }, {\n    key: \"destroyNativeRefresher\",\n    value: function destroyNativeRefresher() {\n      if (this.scrollEl && this.scrollListenerCallback) {\n        this.scrollEl.removeEventListener('scroll', this.scrollListenerCallback);\n        this.scrollListenerCallback = undefined;\n      }\n\n      this.nativeRefresher = false;\n    }\n  }, {\n    key: \"resetNativeRefresher\",\n    value: function () {\n      var _resetNativeRefresher = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(el, state) {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                this.state = state;\n\n                if (!(getIonMode(this) === 'ios')) {\n                  _context3.next = 6;\n                  break;\n                }\n\n                _context3.next = 4;\n                return translateElement(el, undefined);\n\n              case 4:\n                _context3.next = 8;\n                break;\n\n              case 6:\n                _context3.next = 8;\n                return transitionEndAsync(this.el.querySelector('.refresher-refreshing-icon'), 200);\n\n              case 8:\n                this.didRefresh = false;\n                this.needsCompletion = false;\n                this.pointerDown = false;\n                this.animations.forEach(function (ani) {\n                  return ani.destroy();\n                });\n                this.animations = [];\n                this.progress = 0;\n                this.state = 1\n                /* Inactive */\n                ;\n\n              case 15:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function resetNativeRefresher(_x3, _x4) {\n        return _resetNativeRefresher.apply(this, arguments);\n      }\n\n      return resetNativeRefresher;\n    }()\n  }, {\n    key: \"setupiOSNativeRefresher\",\n    value: function () {\n      var _setupiOSNativeRefresher = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(pullingSpinner, refreshingSpinner) {\n        var _this = this;\n\n        var ticks, MAX_PULL, NUM_TICKS;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                this.elementToTransform = this.scrollEl;\n                ticks = pullingSpinner.shadowRoot.querySelectorAll('svg');\n                MAX_PULL = this.scrollEl.clientHeight * 0.16;\n                NUM_TICKS = ticks.length;\n                writeTask(function () {\n                  return ticks.forEach(function (el) {\n                    return el.style.setProperty('animation', 'none');\n                  });\n                });\n\n                this.scrollListenerCallback = function () {\n                  // If pointer is not on screen or refresher is not active, ignore scroll\n                  if (!_this.pointerDown && _this.state === 1\n                  /* Inactive */\n                  ) {\n                      return;\n                    }\n\n                  readTask(function () {\n                    // PTR should only be active when overflow scrolling at the top\n                    var scrollTop = _this.scrollEl.scrollTop;\n                    var refresherHeight = _this.el.clientHeight;\n\n                    if (scrollTop > 0) {\n                      /**\n                       * If refresher is refreshing and user tries to scroll\n                       * progressively fade refresher out/in\n                       */\n                      if (_this.state === 8\n                      /* Refreshing */\n                      ) {\n                          var ratio = clamp(0, scrollTop / (refresherHeight * 0.5), 1);\n                          writeTask(function () {\n                            return setSpinnerOpacity(refreshingSpinner, 1 - ratio);\n                          });\n                          return;\n                        }\n\n                      writeTask(function () {\n                        return setSpinnerOpacity(pullingSpinner, 0);\n                      });\n                      return;\n                    }\n\n                    if (_this.pointerDown) {\n                      if (!_this.didStart) {\n                        _this.didStart = true;\n\n                        _this.ionStart.emit();\n                      } // emit \"pulling\" on every move\n\n\n                      if (_this.pointerDown) {\n                        _this.ionPull.emit();\n                      }\n                    } // delay showing the next tick marks until user has pulled 30px\n\n\n                    var opacity = clamp(0, Math.abs(scrollTop) / refresherHeight, 0.99);\n                    var pullAmount = _this.progress = clamp(0, (Math.abs(scrollTop) - 30) / MAX_PULL, 1);\n                    var currentTickToShow = clamp(0, Math.floor(pullAmount * NUM_TICKS), NUM_TICKS - 1);\n                    var shouldShowRefreshingSpinner = _this.state === 8\n                    /* Refreshing */\n                    || currentTickToShow === NUM_TICKS - 1;\n\n                    if (shouldShowRefreshingSpinner) {\n                      if (_this.pointerDown) {\n                        handleScrollWhileRefreshing(refreshingSpinner, _this.lastVelocityY);\n                      }\n\n                      if (!_this.didRefresh) {\n                        _this.beginRefresh();\n\n                        _this.didRefresh = true;\n                        hapticImpact({\n                          style: 'light'\n                        });\n                        /**\n                         * Translate the content element otherwise when pointer is removed\n                         * from screen the scroll content will bounce back over the refresher\n                         */\n\n                        if (!_this.pointerDown) {\n                          translateElement(_this.elementToTransform, \"\".concat(refresherHeight, \"px\"));\n                        }\n                      }\n                    } else {\n                      _this.state = 2\n                      /* Pulling */\n                      ;\n                      handleScrollWhilePulling(pullingSpinner, ticks, opacity, currentTickToShow);\n                    }\n                  });\n                };\n\n                this.scrollEl.addEventListener('scroll', this.scrollListenerCallback);\n                _context4.next = 9;\n                return import('./index-f49d994d.js');\n\n              case 9:\n                this.gesture = _context4.sent.createGesture({\n                  el: this.scrollEl,\n                  gestureName: 'refresher',\n                  gesturePriority: 31,\n                  direction: 'y',\n                  threshold: 5,\n                  onStart: function onStart() {\n                    _this.pointerDown = true;\n\n                    if (!_this.didRefresh) {\n                      translateElement(_this.elementToTransform, '0px');\n                    }\n                    /**\n                     * If the content had `display: none` when\n                     * the refresher was initialized, its clientHeight\n                     * will be 0. When the gesture starts, the content\n                     * will be visible, so try to get the correct\n                     * client height again. This is most common when\n                     * using the refresher in an ion-menu.\n                     */\n\n\n                    if (MAX_PULL === 0) {\n                      MAX_PULL = _this.scrollEl.clientHeight * 0.16;\n                    }\n                  },\n                  onMove: function onMove(ev) {\n                    _this.lastVelocityY = ev.velocityY;\n                  },\n                  onEnd: function onEnd() {\n                    _this.pointerDown = false;\n                    _this.didStart = false;\n\n                    if (_this.needsCompletion) {\n                      _this.resetNativeRefresher(_this.elementToTransform, 32\n                      /* Completing */\n                      );\n\n                      _this.needsCompletion = false;\n                    } else if (_this.didRefresh) {\n                      readTask(function () {\n                        return translateElement(_this.elementToTransform, \"\".concat(_this.el.clientHeight, \"px\"));\n                      });\n                    }\n                  }\n                });\n                this.disabledChanged();\n\n              case 11:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function setupiOSNativeRefresher(_x5, _x6) {\n        return _setupiOSNativeRefresher.apply(this, arguments);\n      }\n\n      return setupiOSNativeRefresher;\n    }()\n  }, {\n    key: \"setupMDNativeRefresher\",\n    value: function () {\n      var _setupMDNativeRefresher = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(contentEl, pullingSpinner, refreshingSpinner) {\n        var _this2 = this;\n\n        var circle, pullingRefresherIcon, refreshingCircle;\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                circle = getElementRoot(pullingSpinner).querySelector('circle');\n                pullingRefresherIcon = this.el.querySelector('ion-refresher-content .refresher-pulling-icon');\n                refreshingCircle = getElementRoot(refreshingSpinner).querySelector('circle');\n\n                if (circle !== null && refreshingCircle !== null) {\n                  writeTask(function () {\n                    circle.style.setProperty('animation', 'none'); // This lines up the animation on the refreshing spinner with the pulling spinner\n\n                    refreshingSpinner.style.setProperty('animation-delay', '-655ms');\n                    refreshingCircle.style.setProperty('animation-delay', '-655ms');\n                  });\n                }\n\n                _context6.next = 6;\n                return import('./index-f49d994d.js');\n\n              case 6:\n                this.gesture = _context6.sent.createGesture({\n                  el: this.scrollEl,\n                  gestureName: 'refresher',\n                  gesturePriority: 31,\n                  direction: 'y',\n                  threshold: 5,\n                  canStart: function canStart() {\n                    return _this2.state !== 8\n                    /* Refreshing */\n                    && _this2.state !== 32\n                    /* Completing */\n                    && _this2.scrollEl.scrollTop === 0;\n                  },\n                  onStart: function onStart(ev) {\n                    ev.data = {\n                      animation: undefined,\n                      didStart: false,\n                      cancelled: false\n                    };\n                  },\n                  onMove: function onMove(ev) {\n                    if (ev.velocityY < 0 && _this2.progress === 0 && !ev.data.didStart || ev.data.cancelled) {\n                      ev.data.cancelled = true;\n                      return;\n                    }\n\n                    if (!ev.data.didStart) {\n                      ev.data.didStart = true;\n                      _this2.state = 2\n                      /* Pulling */\n                      ;\n                      writeTask(function () {\n                        var animationType = getRefresherAnimationType(contentEl);\n                        var animation = createPullingAnimation(animationType, pullingRefresherIcon);\n                        ev.data.animation = animation;\n\n                        _this2.scrollEl.style.setProperty('--overflow', 'hidden');\n\n                        animation.progressStart(false, 0);\n\n                        _this2.ionStart.emit();\n\n                        _this2.animations.push(animation);\n                      });\n                      return;\n                    } // Since we are using an easing curve, slow the gesture tracking down a bit\n\n\n                    _this2.progress = clamp(0, ev.deltaY / 180 * 0.5, 1);\n                    ev.data.animation.progressStep(_this2.progress);\n\n                    _this2.ionPull.emit();\n                  },\n                  onEnd: function onEnd(ev) {\n                    if (!ev.data.didStart) {\n                      return;\n                    }\n\n                    writeTask(function () {\n                      return _this2.scrollEl.style.removeProperty('--overflow');\n                    });\n\n                    if (_this2.progress <= 0.4) {\n                      _this2.gesture.enable(false);\n\n                      ev.data.animation.progressEnd(0, _this2.progress, 500).onFinish(function () {\n                        _this2.animations.forEach(function (ani) {\n                          return ani.destroy();\n                        });\n\n                        _this2.animations = [];\n\n                        _this2.gesture.enable(true);\n\n                        _this2.state = 1\n                        /* Inactive */\n                        ;\n                      });\n                      return;\n                    }\n\n                    var progress = getTimeGivenProgression([0, 0], [0, 0], [1, 1], [1, 1], _this2.progress)[0];\n                    var snapBackAnimation = createSnapBackAnimation(pullingRefresherIcon);\n\n                    _this2.animations.push(snapBackAnimation);\n\n                    writeTask( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n                      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n                        while (1) {\n                          switch (_context5.prev = _context5.next) {\n                            case 0:\n                              pullingRefresherIcon.style.setProperty('--ion-pulling-refresher-translate', \"\".concat(progress * 100, \"px\"));\n                              ev.data.animation.progressEnd();\n                              _context5.next = 4;\n                              return snapBackAnimation.play();\n\n                            case 4:\n                              _this2.beginRefresh();\n\n                              ev.data.animation.destroy();\n\n                            case 6:\n                            case \"end\":\n                              return _context5.stop();\n                          }\n                        }\n                      }, _callee5);\n                    })));\n                  }\n                });\n                this.disabledChanged();\n\n              case 8:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      function setupMDNativeRefresher(_x7, _x8, _x9) {\n        return _setupMDNativeRefresher.apply(this, arguments);\n      }\n\n      return setupMDNativeRefresher;\n    }()\n  }, {\n    key: \"setupNativeRefresher\",\n    value: function () {\n      var _setupNativeRefresher = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(contentEl) {\n        var pullingSpinner, refreshingSpinner;\n        return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                if (!(this.scrollListenerCallback || !contentEl || this.nativeRefresher || !this.scrollEl)) {\n                  _context7.next = 2;\n                  break;\n                }\n\n                return _context7.abrupt(\"return\");\n\n              case 2:\n                /**\n                 * If using non-native refresher before make sure\n                 * we clean up any old CSS. This can happen when\n                 * a user manually calls the refresh method in a\n                 * component create callback before the native\n                 * refresher is setup.\n                 */\n                this.setCss(0, '', false, '');\n                this.nativeRefresher = true;\n                pullingSpinner = this.el.querySelector('ion-refresher-content .refresher-pulling ion-spinner');\n                refreshingSpinner = this.el.querySelector('ion-refresher-content .refresher-refreshing ion-spinner');\n\n                if (getIonMode(this) === 'ios') {\n                  this.setupiOSNativeRefresher(pullingSpinner, refreshingSpinner);\n                } else {\n                  this.setupMDNativeRefresher(contentEl, pullingSpinner, refreshingSpinner);\n                }\n\n              case 7:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n\n      function setupNativeRefresher(_x10) {\n        return _setupNativeRefresher.apply(this, arguments);\n      }\n\n      return setupNativeRefresher;\n    }()\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this.checkNativeRefresher();\n    }\n  }, {\n    key: \"connectedCallback\",\n    value: function () {\n      var _connectedCallback = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8() {\n        var _this3 = this;\n\n        var contentEl;\n        return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                if (!(this.el.getAttribute('slot') !== 'fixed')) {\n                  _context8.next = 3;\n                  break;\n                }\n\n                console.error('Make sure you use: <ion-refresher slot=\"fixed\">');\n                return _context8.abrupt(\"return\");\n\n              case 3:\n                contentEl = this.el.closest('ion-content');\n\n                if (contentEl) {\n                  _context8.next = 7;\n                  break;\n                }\n\n                console.error('<ion-refresher> must be used inside an <ion-content>');\n                return _context8.abrupt(\"return\");\n\n              case 7:\n                _context8.next = 9;\n                return contentEl.componentOnReady();\n\n              case 9:\n                _context8.next = 11;\n                return contentEl.getScrollElement();\n\n              case 11:\n                this.scrollEl = _context8.sent;\n                this.backgroundContentEl = getElementRoot(contentEl).querySelector('#background-content');\n                _context8.next = 15;\n                return shouldUseNativeRefresher(this.el, getIonMode(this));\n\n              case 15:\n                if (!_context8.sent) {\n                  _context8.next = 19;\n                  break;\n                }\n\n                this.setupNativeRefresher(contentEl);\n                _context8.next = 23;\n                break;\n\n              case 19:\n                _context8.next = 21;\n                return import('./index-f49d994d.js');\n\n              case 21:\n                this.gesture = _context8.sent.createGesture({\n                  el: contentEl,\n                  gestureName: 'refresher',\n                  gesturePriority: 31,\n                  direction: 'y',\n                  threshold: 20,\n                  passive: false,\n                  canStart: function canStart() {\n                    return _this3.canStart();\n                  },\n                  onStart: function onStart() {\n                    return _this3.onStart();\n                  },\n                  onMove: function onMove(ev) {\n                    return _this3.onMove(ev);\n                  },\n                  onEnd: function onEnd() {\n                    return _this3.onEnd();\n                  }\n                });\n                this.disabledChanged();\n\n              case 23:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, this);\n      }));\n\n      function connectedCallback() {\n        return _connectedCallback.apply(this, arguments);\n      }\n\n      return connectedCallback;\n    }()\n  }, {\n    key: \"disconnectedCallback\",\n    value: function disconnectedCallback() {\n      this.destroyNativeRefresher();\n      this.scrollEl = undefined;\n\n      if (this.gesture) {\n        this.gesture.destroy();\n        this.gesture = undefined;\n      }\n    }\n    /**\n     * Call `complete()` when your async operation has completed.\n     * For example, the `refreshing` state is while the app is performing\n     * an asynchronous operation, such as receiving more data from an\n     * AJAX request. Once the data has been received, you then call this\n     * method to signify that the refreshing has completed and to close\n     * the refresher. This method also changes the refresher's state from\n     * `refreshing` to `completing`.\n     */\n\n  }, {\n    key: \"complete\",\n    value: function () {\n      var _complete = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee9() {\n        var _this4 = this;\n\n        return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                if (this.nativeRefresher) {\n                  this.needsCompletion = true; // Do not reset scroll el until user removes pointer from screen\n\n                  if (!this.pointerDown) {\n                    raf(function () {\n                      return raf(function () {\n                        return _this4.resetNativeRefresher(_this4.elementToTransform, 32\n                        /* Completing */\n                        );\n                      });\n                    });\n                  }\n                } else {\n                  this.close(32\n                  /* Completing */\n                  , '120ms');\n                }\n\n              case 1:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9, this);\n      }));\n\n      function complete() {\n        return _complete.apply(this, arguments);\n      }\n\n      return complete;\n    }()\n    /**\n     * Changes the refresher's state from `refreshing` to `cancelling`.\n     */\n\n  }, {\n    key: \"cancel\",\n    value: function () {\n      var _cancel = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee10() {\n        var _this5 = this;\n\n        return _regeneratorRuntime.wrap(function _callee10$(_context10) {\n          while (1) {\n            switch (_context10.prev = _context10.next) {\n              case 0:\n                if (this.nativeRefresher) {\n                  // Do not reset scroll el until user removes pointer from screen\n                  if (!this.pointerDown) {\n                    raf(function () {\n                      return raf(function () {\n                        return _this5.resetNativeRefresher(_this5.elementToTransform, 16\n                        /* Cancelling */\n                        );\n                      });\n                    });\n                  }\n                } else {\n                  this.close(16\n                  /* Cancelling */\n                  , '');\n                }\n\n              case 1:\n              case \"end\":\n                return _context10.stop();\n            }\n          }\n        }, _callee10, this);\n      }));\n\n      function cancel() {\n        return _cancel.apply(this, arguments);\n      }\n\n      return cancel;\n    }()\n    /**\n     * A number representing how far down the user has pulled.\n     * The number `0` represents the user hasn't pulled down at all. The\n     * number `1`, and anything greater than `1`, represents that the user\n     * has pulled far enough down that when they let go then the refresh will\n     * happen. If they let go and the number is less than `1`, then the\n     * refresh will not happen, and the content will return to it's original\n     * position.\n     */\n\n  }, {\n    key: \"getProgress\",\n    value: function getProgress() {\n      return Promise.resolve(this.progress);\n    }\n  }, {\n    key: \"canStart\",\n    value: function canStart() {\n      if (!this.scrollEl) {\n        return false;\n      }\n\n      if (this.state !== 1\n      /* Inactive */\n      ) {\n          return false;\n        } // if the scrollTop is greater than zero then it's\n      // not possible to pull the content down yet\n\n\n      if (this.scrollEl.scrollTop > 0) {\n        return false;\n      }\n\n      return true;\n    }\n  }, {\n    key: \"onStart\",\n    value: function onStart() {\n      this.progress = 0;\n      this.state = 1\n      /* Inactive */\n      ;\n    }\n  }, {\n    key: \"onMove\",\n    value: function onMove(detail) {\n      if (!this.scrollEl) {\n        return;\n      } // this method can get called like a bazillion times per second,\n      // so it's built to be as efficient as possible, and does its\n      // best to do any DOM read/writes only when absolutely necessary\n      // if multi-touch then get out immediately\n\n\n      var ev = detail.event;\n\n      if (ev.touches && ev.touches.length > 1) {\n        return;\n      } // do nothing if it's actively refreshing\n      // or it's in the way of closing\n      // or this was never a startY\n\n\n      if ((this.state & 56\n      /* _BUSY_ */\n      ) !== 0) {\n        return;\n      }\n\n      var pullFactor = Number.isNaN(this.pullFactor) || this.pullFactor < 0 ? 1 : this.pullFactor;\n      var deltaY = detail.deltaY * pullFactor; // don't bother if they're scrolling up\n      // and have not already started dragging\n\n      if (deltaY <= 0) {\n        // the current Y is higher than the starting Y\n        // so they scrolled up enough to be ignored\n        this.progress = 0;\n        this.state = 1\n        /* Inactive */\n        ;\n\n        if (this.appliedStyles) {\n          // reset the styles only if they were applied\n          this.setCss(0, '', false, '');\n          return;\n        }\n\n        return;\n      }\n\n      if (this.state === 1\n      /* Inactive */\n      ) {\n          // this refresh is not already actively pulling down\n          // get the content's scrollTop\n          var scrollHostScrollTop = this.scrollEl.scrollTop; // if the scrollTop is greater than zero then it's\n          // not possible to pull the content down yet\n\n          if (scrollHostScrollTop > 0) {\n            this.progress = 0;\n            return;\n          } // content scrolled all the way to the top, and dragging down\n\n\n          this.state = 2\n          /* Pulling */\n          ;\n        } // prevent native scroll events\n\n\n      if (ev.cancelable) {\n        ev.preventDefault();\n      } // the refresher is actively pulling at this point\n      // move the scroll element within the content element\n\n\n      this.setCss(deltaY, '0ms', true, '');\n\n      if (deltaY === 0) {\n        // don't continue if there's no delta yet\n        this.progress = 0;\n        return;\n      }\n\n      var pullMin = this.pullMin; // set pull progress\n\n      this.progress = deltaY / pullMin; // emit \"start\" if it hasn't started yet\n\n      if (!this.didStart) {\n        this.didStart = true;\n        this.ionStart.emit();\n      } // emit \"pulling\" on every move\n\n\n      this.ionPull.emit(); // do nothing if the delta is less than the pull threshold\n\n      if (deltaY < pullMin) {\n        // ensure it stays in the pulling state, cuz its not ready yet\n        this.state = 2\n        /* Pulling */\n        ;\n        return;\n      }\n\n      if (deltaY > this.pullMax) {\n        // they pulled farther than the max, so kick off the refresh\n        this.beginRefresh();\n        return;\n      } // pulled farther than the pull min!!\n      // it is now in the `ready` state!!\n      // if they let go then it'll refresh, kerpow!!\n\n\n      this.state = 4\n      /* Ready */\n      ;\n      return;\n    }\n  }, {\n    key: \"onEnd\",\n    value: function onEnd() {\n      // only run in a zone when absolutely necessary\n      if (this.state === 4\n      /* Ready */\n      ) {\n          // they pulled down far enough, so it's ready to refresh\n          this.beginRefresh();\n        } else if (this.state === 2\n      /* Pulling */\n      ) {\n          // they were pulling down, but didn't pull down far enough\n          // set the content back to it's original location\n          // and close the refresher\n          // set that the refresh is actively cancelling\n          this.cancel();\n        }\n    }\n  }, {\n    key: \"beginRefresh\",\n    value: function beginRefresh() {\n      // assumes we're already back in a zone\n      // they pulled down far enough, so it's ready to refresh\n      this.state = 8\n      /* Refreshing */\n      ; // place the content in a hangout position while it thinks\n\n      this.setCss(this.pullMin, this.snapbackDuration, true, ''); // emit \"refresh\" because it was pulled down far enough\n      // and they let go to begin refreshing\n\n      this.ionRefresh.emit({\n        complete: this.complete.bind(this)\n      });\n    }\n  }, {\n    key: \"close\",\n    value: function close(state, delay) {\n      var _this6 = this;\n\n      // create fallback timer incase something goes wrong with transitionEnd event\n      setTimeout(function () {\n        _this6.state = 1\n        /* Inactive */\n        ;\n        _this6.progress = 0;\n        _this6.didStart = false;\n\n        _this6.setCss(0, '0ms', false, '');\n      }, 600); // reset set the styles on the scroll element\n      // set that the refresh is actively cancelling/completing\n\n      this.state = state;\n      this.setCss(0, this.closeDuration, true, delay); // TODO: stop gesture\n    }\n  }, {\n    key: \"setCss\",\n    value: function setCss(y, duration, overflowVisible, delay) {\n      var _this7 = this;\n\n      if (this.nativeRefresher) {\n        return;\n      }\n\n      this.appliedStyles = y > 0;\n      writeTask(function () {\n        if (_this7.scrollEl && _this7.backgroundContentEl) {\n          var scrollStyle = _this7.scrollEl.style;\n          var backgroundStyle = _this7.backgroundContentEl.style;\n          scrollStyle.transform = backgroundStyle.transform = y > 0 ? \"translateY(\".concat(y, \"px) translateZ(0px)\") : '';\n          scrollStyle.transitionDuration = backgroundStyle.transitionDuration = duration;\n          scrollStyle.transitionDelay = backgroundStyle.transitionDelay = delay;\n          scrollStyle.overflow = overflowVisible ? 'hidden' : '';\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _class;\n\n      var mode = getIonMode(this);\n      return h(Host, {\n        slot: \"fixed\",\n        class: (_class = {}, _defineProperty(_class, mode, true), _defineProperty(_class, \"refresher-\".concat(mode), true), _defineProperty(_class, 'refresher-native', this.nativeRefresher), _defineProperty(_class, 'refresher-active', this.state !== 1), _defineProperty(_class, 'refresher-pulling', this.state === 2), _defineProperty(_class, 'refresher-ready', this.state === 4), _defineProperty(_class, 'refresher-refreshing', this.state === 8), _defineProperty(_class, 'refresher-cancelling', this.state === 16), _defineProperty(_class, 'refresher-completing', this.state === 32), _class)\n      });\n    }\n  }, {\n    key: \"el\",\n    get: function get() {\n      return getElement(this);\n    }\n  }], [{\n    key: \"watchers\",\n    get: function get() {\n      return {\n        \"disabled\": [\"disabledChanged\"]\n      };\n    }\n  }]);\n\n  return Refresher;\n}();\n\nRefresher.style = {\n  ios: refresherIosCss,\n  md: refresherMdCss\n};\n\nvar RefresherContent = /*#__PURE__*/function () {\n  function RefresherContent(hostRef) {\n    _classCallCheck(this, RefresherContent);\n\n    registerInstance(this, hostRef);\n  }\n\n  _createClass(RefresherContent, [{\n    key: \"componentWillLoad\",\n    value: function componentWillLoad() {\n      if (this.pullingIcon === undefined) {\n        var mode = getIonMode(this);\n        var overflowRefresher = this.el.style.webkitOverflowScrolling !== undefined ? 'lines' : 'arrow-down';\n        this.pullingIcon = config.get('refreshingIcon', mode === 'ios' && isPlatform('mobile') ? config.get('spinner', overflowRefresher) : 'circular');\n      }\n\n      if (this.refreshingSpinner === undefined) {\n        var _mode = getIonMode(this);\n\n        this.refreshingSpinner = config.get('refreshingSpinner', config.get('spinner', _mode === 'ios' ? 'lines' : 'circular'));\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var pullingIcon = this.pullingIcon;\n      var hasSpinner = pullingIcon != null && SPINNERS[pullingIcon] !== undefined;\n      var mode = getIonMode(this);\n      return h(Host, {\n        class: mode\n      }, h(\"div\", {\n        class: \"refresher-pulling\"\n      }, this.pullingIcon && hasSpinner && h(\"div\", {\n        class: \"refresher-pulling-icon\"\n      }, h(\"div\", {\n        class: \"spinner-arrow-container\"\n      }, h(\"ion-spinner\", {\n        name: this.pullingIcon,\n        paused: true\n      }), mode === 'md' && this.pullingIcon === 'circular' && h(\"div\", {\n        class: \"arrow-container\"\n      }, h(\"ion-icon\", {\n        name: \"caret-back-sharp\"\n      })))), this.pullingIcon && !hasSpinner && h(\"div\", {\n        class: \"refresher-pulling-icon\"\n      }, h(\"ion-icon\", {\n        icon: this.pullingIcon,\n        lazy: false\n      })), this.pullingText && h(\"div\", {\n        class: \"refresher-pulling-text\",\n        innerHTML: sanitizeDOMString(this.pullingText)\n      })), h(\"div\", {\n        class: \"refresher-refreshing\"\n      }, this.refreshingSpinner && h(\"div\", {\n        class: \"refresher-refreshing-icon\"\n      }, h(\"ion-spinner\", {\n        name: this.refreshingSpinner\n      })), this.refreshingText && h(\"div\", {\n        class: \"refresher-refreshing-text\",\n        innerHTML: sanitizeDOMString(this.refreshingText)\n      })));\n    }\n  }, {\n    key: \"el\",\n    get: function get() {\n      return getElement(this);\n    }\n  }]);\n\n  return RefresherContent;\n}();\n\nexport { Refresher as ion_refresher, RefresherContent as ion_refresher_content };","map":{"version":3,"sources":["D:/Recaudooffline V.1.0.1/node_modules/@ionic/core/dist/esm/ion-refresher_2.entry.js"],"names":["c","writeTask","r","registerInstance","e","createEvent","f","readTask","h","i","getElement","H","Host","isPlatform","b","getIonMode","config","clamp","g","getElementRoot","raf","createAnimation","getTimeGivenProgression","s","sanitizeDOMString","d","hapticImpact","S","SPINNERS","getRefresherAnimationType","contentEl","previousSibling","previousElementSibling","hasHeader","tagName","createPullingAnimation","type","pullingSpinner","createScaleAnimation","createTranslateAnimation","createBaseAnimation","pullingRefresherIcon","spinner","querySelector","circle","shadowRoot","spinnerArrowContainer","arrowContainer","arrow","baseAnimation","duration","easing","spinnerArrowContainerAnimation","addElement","keyframes","offset","opacity","circleInnerAnimation","strokeDasharray","circleOuterAnimation","transform","arrowContainerAnimation","arrowAnimation","addAnimation","height","clientHeight","spinnerAnimation","createSnapBackAnimation","fromTo","setSpinnerOpacity","style","setProperty","toString","handleScrollWhilePulling","ticks","currentTickToShow","forEach","el","handleScrollWhileRefreshing","lastVelocityY","translateElement","value","Promise","resolve","trans","transitionEndAsync","undefined","removeProperty","shouldUseNativeRefresher","referenceEl","mode","refresherContent","componentOnReady","refreshingSpinner","webkitOverflowScrolling","expectedDuration","transitionEnd","callback","unRegTrans","animationTimeout","opts","passive","ANIMATION_FALLBACK_TIMEOUT","unregister","onTransitionEnd","ev","target","addEventListener","setTimeout","clearTimeout","removeEventListener","refresherIosCss","refresherMdCss","Refresher","hostRef","ionRefresh","ionPull","ionStart","appliedStyles","didStart","progress","pointerDown","needsCompletion","didRefresh","animations","nativeRefresher","state","pullMin","pullMax","closeDuration","snapbackDuration","pullFactor","disabled","gesture","enable","useNativeRefresher","closest","setupNativeRefresher","destroyNativeRefresher","scrollEl","scrollListenerCallback","ani","destroy","elementToTransform","querySelectorAll","MAX_PULL","NUM_TICKS","length","scrollTop","refresherHeight","ratio","emit","Math","abs","pullAmount","floor","shouldShowRefreshingSpinner","beginRefresh","createGesture","gestureName","gesturePriority","direction","threshold","onStart","onMove","velocityY","onEnd","resetNativeRefresher","disabledChanged","refreshingCircle","canStart","data","animation","cancelled","animationType","progressStart","push","deltaY","progressStep","progressEnd","onFinish","snapBackAnimation","play","setCss","setupiOSNativeRefresher","setupMDNativeRefresher","checkNativeRefresher","getAttribute","console","error","getScrollElement","backgroundContentEl","close","detail","event","touches","Number","isNaN","scrollHostScrollTop","cancelable","preventDefault","cancel","complete","bind","delay","y","overflowVisible","scrollStyle","backgroundStyle","transitionDuration","transitionDelay","overflow","slot","class","ios","md","RefresherContent","pullingIcon","overflowRefresher","get","hasSpinner","name","paused","icon","lazy","pullingText","innerHTML","refreshingText","ion_refresher","ion_refresher_content"],"mappings":"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","sourcesContent":["import { c as writeTask, r as registerInstance, e as createEvent, f as readTask, h, i as getElement, H as Host } from './index-e806d1f6.js';\nimport { i as isPlatform, b as getIonMode, c as config } from './ionic-global-9d5c8ee3.js';\nimport { h as clamp, g as getElementRoot, r as raf } from './helpers-90f46169.js';\nimport { c as createAnimation } from './animation-54fe0237.js';\nimport { g as getTimeGivenProgression } from './cubic-bezier-eea9a7a9.js';\nimport { s as sanitizeDOMString } from './index-9e3fe806.js';\nimport { d as hapticImpact } from './haptic-27b3f981.js';\nimport { S as SPINNERS } from './spinner-configs-cd7845af.js';\n\nconst getRefresherAnimationType = (contentEl) => {\n  const previousSibling = contentEl.previousElementSibling;\n  const hasHeader = previousSibling !== null && previousSibling.tagName === 'ION-HEADER';\n  return hasHeader ? 'translate' : 'scale';\n};\nconst createPullingAnimation = (type, pullingSpinner) => {\n  return type === 'scale' ? createScaleAnimation(pullingSpinner) : createTranslateAnimation(pullingSpinner);\n};\nconst createBaseAnimation = (pullingRefresherIcon) => {\n  const spinner = pullingRefresherIcon.querySelector('ion-spinner');\n  const circle = spinner.shadowRoot.querySelector('circle');\n  const spinnerArrowContainer = pullingRefresherIcon.querySelector('.spinner-arrow-container');\n  const arrowContainer = pullingRefresherIcon.querySelector('.arrow-container');\n  const arrow = (arrowContainer) ? arrowContainer.querySelector('ion-icon') : null;\n  const baseAnimation = createAnimation()\n    .duration(1000)\n    .easing('ease-out');\n  const spinnerArrowContainerAnimation = createAnimation()\n    .addElement(spinnerArrowContainer)\n    .keyframes([\n    { offset: 0, opacity: '0.3' },\n    { offset: 0.45, opacity: '0.3' },\n    { offset: 0.55, opacity: '1' },\n    { offset: 1, opacity: '1' }\n  ]);\n  const circleInnerAnimation = createAnimation()\n    .addElement(circle)\n    .keyframes([\n    { offset: 0, strokeDasharray: '1px, 200px' },\n    { offset: 0.20, strokeDasharray: '1px, 200px' },\n    { offset: 0.55, strokeDasharray: '100px, 200px' },\n    { offset: 1, strokeDasharray: '100px, 200px' }\n  ]);\n  const circleOuterAnimation = createAnimation()\n    .addElement(spinner)\n    .keyframes([\n    { offset: 0, transform: 'rotate(-90deg)' },\n    { offset: 1, transform: 'rotate(210deg)' }\n  ]);\n  /**\n   * Only add arrow animation if present\n   * this allows users to customize the spinners\n   * without errors being thrown\n   */\n  if (arrowContainer && arrow) {\n    const arrowContainerAnimation = createAnimation()\n      .addElement(arrowContainer)\n      .keyframes([\n      { offset: 0, transform: 'rotate(0deg)' },\n      { offset: 0.30, transform: 'rotate(0deg)' },\n      { offset: 0.55, transform: 'rotate(280deg)' },\n      { offset: 1, transform: 'rotate(400deg)' }\n    ]);\n    const arrowAnimation = createAnimation()\n      .addElement(arrow)\n      .keyframes([\n      { offset: 0, transform: 'translateX(2px) scale(0)' },\n      { offset: 0.30, transform: 'translateX(2px) scale(0)' },\n      { offset: 0.55, transform: 'translateX(-1.5px) scale(1)' },\n      { offset: 1, transform: 'translateX(-1.5px) scale(1)' }\n    ]);\n    baseAnimation.addAnimation([arrowContainerAnimation, arrowAnimation]);\n  }\n  return baseAnimation.addAnimation([spinnerArrowContainerAnimation, circleInnerAnimation, circleOuterAnimation]);\n};\nconst createScaleAnimation = (pullingRefresherIcon) => {\n  const height = pullingRefresherIcon.clientHeight;\n  const spinnerAnimation = createAnimation()\n    .addElement(pullingRefresherIcon)\n    .keyframes([\n    { offset: 0, transform: `scale(0) translateY(-${height + 20}px)` },\n    { offset: 1, transform: 'scale(1) translateY(100px)' }\n  ]);\n  return createBaseAnimation(pullingRefresherIcon).addAnimation([spinnerAnimation]);\n};\nconst createTranslateAnimation = (pullingRefresherIcon) => {\n  const height = pullingRefresherIcon.clientHeight;\n  const spinnerAnimation = createAnimation()\n    .addElement(pullingRefresherIcon)\n    .keyframes([\n    { offset: 0, transform: `translateY(-${height + 20}px)` },\n    { offset: 1, transform: 'translateY(100px)' }\n  ]);\n  return createBaseAnimation(pullingRefresherIcon).addAnimation([spinnerAnimation]);\n};\nconst createSnapBackAnimation = (pullingRefresherIcon) => {\n  return createAnimation()\n    .duration(125)\n    .addElement(pullingRefresherIcon)\n    .fromTo('transform', 'translateY(var(--ion-pulling-refresher-translate, 100px))', 'translateY(0px)');\n};\n// iOS Native Refresher\n// -----------------------------\nconst setSpinnerOpacity = (spinner, opacity) => {\n  spinner.style.setProperty('opacity', opacity.toString());\n};\nconst handleScrollWhilePulling = (spinner, ticks, opacity, currentTickToShow) => {\n  writeTask(() => {\n    setSpinnerOpacity(spinner, opacity);\n    ticks.forEach((el, i) => el.style.setProperty('opacity', (i <= currentTickToShow) ? '0.99' : '0'));\n  });\n};\nconst handleScrollWhileRefreshing = (spinner, lastVelocityY) => {\n  writeTask(() => {\n    // If user pulls down quickly, the spinner should spin faster\n    spinner.style.setProperty('--refreshing-rotation-duration', (lastVelocityY >= 1.0) ? '0.5s' : '2s');\n    spinner.style.setProperty('opacity', '1');\n  });\n};\nconst translateElement = (el, value) => {\n  if (!el) {\n    return Promise.resolve();\n  }\n  const trans = transitionEndAsync(el, 200);\n  writeTask(() => {\n    el.style.setProperty('transition', '0.2s all ease-out');\n    if (value === undefined) {\n      el.style.removeProperty('transform');\n    }\n    else {\n      el.style.setProperty('transform', `translate3d(0px, ${value}, 0px)`);\n    }\n  });\n  return trans;\n};\n// Utils\n// -----------------------------\nconst shouldUseNativeRefresher = async (referenceEl, mode) => {\n  const refresherContent = referenceEl.querySelector('ion-refresher-content');\n  if (!refresherContent) {\n    return Promise.resolve(false);\n  }\n  await refresherContent.componentOnReady();\n  const pullingSpinner = referenceEl.querySelector('ion-refresher-content .refresher-pulling ion-spinner');\n  const refreshingSpinner = referenceEl.querySelector('ion-refresher-content .refresher-refreshing ion-spinner');\n  return (pullingSpinner !== null &&\n    refreshingSpinner !== null &&\n    ((mode === 'ios' && isPlatform('mobile') && referenceEl.style.webkitOverflowScrolling !== undefined) ||\n      mode === 'md'));\n};\nconst transitionEndAsync = (el, expectedDuration = 0) => {\n  return new Promise(resolve => {\n    transitionEnd(el, expectedDuration, resolve);\n  });\n};\nconst transitionEnd = (el, expectedDuration = 0, callback) => {\n  let unRegTrans;\n  let animationTimeout;\n  const opts = { passive: true };\n  const ANIMATION_FALLBACK_TIMEOUT = 500;\n  const unregister = () => {\n    if (unRegTrans) {\n      unRegTrans();\n    }\n  };\n  const onTransitionEnd = (ev) => {\n    if (ev === undefined || el === ev.target) {\n      unregister();\n      callback(ev);\n    }\n  };\n  if (el) {\n    el.addEventListener('webkitTransitionEnd', onTransitionEnd, opts);\n    el.addEventListener('transitionend', onTransitionEnd, opts);\n    animationTimeout = setTimeout(onTransitionEnd, expectedDuration + ANIMATION_FALLBACK_TIMEOUT);\n    unRegTrans = () => {\n      if (animationTimeout) {\n        clearTimeout(animationTimeout);\n        animationTimeout = undefined;\n      }\n      el.removeEventListener('webkitTransitionEnd', onTransitionEnd, opts);\n      el.removeEventListener('transitionend', onTransitionEnd, opts);\n    };\n  }\n  return unregister;\n};\n\nconst refresherIosCss = \"ion-refresher{left:0;top:0;display:none;position:absolute;width:100%;height:60px;pointer-events:none;z-index:-1}[dir=rtl] ion-refresher,:host-context([dir=rtl]) ion-refresher{left:unset;right:unset;right:0}ion-refresher.refresher-active{display:block}ion-refresher-content{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:center;justify-content:center;height:100%}.refresher-pulling,.refresher-refreshing{display:none;width:100%}.refresher-pulling-icon,.refresher-refreshing-icon{-webkit-transform-origin:center;transform-origin:center;-webkit-transition:200ms;transition:200ms;font-size:30px;text-align:center}[dir=rtl] .refresher-pulling-icon,:host-context([dir=rtl]) .refresher-pulling-icon,[dir=rtl] .refresher-refreshing-icon,:host-context([dir=rtl]) .refresher-refreshing-icon{-webkit-transform-origin:calc(100% - center);transform-origin:calc(100% - center)}.refresher-pulling-text,.refresher-refreshing-text{font-size:16px;text-align:center}ion-refresher-content .arrow-container{display:none}.refresher-pulling ion-refresher-content .refresher-pulling{display:block}.refresher-ready ion-refresher-content .refresher-pulling{display:block}.refresher-ready ion-refresher-content .refresher-pulling-icon{-webkit-transform:rotate(180deg);transform:rotate(180deg)}.refresher-refreshing ion-refresher-content .refresher-refreshing{display:block}.refresher-cancelling ion-refresher-content .refresher-pulling{display:block}.refresher-cancelling ion-refresher-content .refresher-pulling-icon{-webkit-transform:scale(0);transform:scale(0)}.refresher-completing ion-refresher-content .refresher-refreshing{display:block}.refresher-completing ion-refresher-content .refresher-refreshing-icon{-webkit-transform:scale(0);transform:scale(0)}.refresher-native .refresher-pulling-text,.refresher-native .refresher-refreshing-text{display:none}.refresher-ios .refresher-pulling-icon,.refresher-ios .refresher-refreshing-icon{color:var(--ion-text-color, #000)}.refresher-ios .refresher-pulling-text,.refresher-ios .refresher-refreshing-text{color:var(--ion-text-color, #000)}.refresher-ios .refresher-refreshing .spinner-lines-ios line,.refresher-ios .refresher-refreshing .spinner-lines-small-ios line,.refresher-ios .refresher-refreshing .spinner-crescent circle{stroke:var(--ion-text-color, #000)}.refresher-ios .refresher-refreshing .spinner-bubbles circle,.refresher-ios .refresher-refreshing .spinner-circles circle,.refresher-ios .refresher-refreshing .spinner-dots circle{fill:var(--ion-text-color, #000)}ion-refresher.refresher-native{display:block;z-index:1}ion-refresher.refresher-native ion-spinner{margin-left:auto;margin-right:auto;margin-top:0;margin-bottom:0}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){ion-refresher.refresher-native ion-spinner{margin-left:unset;margin-right:unset;-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto}}.refresher-native .refresher-refreshing ion-spinner{--refreshing-rotation-duration:2s;display:none;-webkit-animation:var(--refreshing-rotation-duration) ease-out refresher-rotate forwards;animation:var(--refreshing-rotation-duration) ease-out refresher-rotate forwards}.refresher-native .refresher-refreshing{display:none;-webkit-animation:250ms linear refresher-pop forwards;animation:250ms linear refresher-pop forwards}.refresher-native.refresher-refreshing .refresher-pulling ion-spinner,.refresher-native.refresher-completing .refresher-pulling ion-spinner{display:none}.refresher-native.refresher-refreshing .refresher-refreshing ion-spinner,.refresher-native.refresher-completing .refresher-refreshing ion-spinner{display:block}.refresher-native.refresher-pulling .refresher-pulling ion-spinner{display:block}.refresher-native.refresher-pulling .refresher-refreshing ion-spinner{display:none}@-webkit-keyframes refresher-pop{0%{-webkit-transform:scale(1);transform:scale(1);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}50%{-webkit-transform:scale(1.2);transform:scale(1.2);-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out}100%{-webkit-transform:scale(1);transform:scale(1)}}@keyframes refresher-pop{0%{-webkit-transform:scale(1);transform:scale(1);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}50%{-webkit-transform:scale(1.2);transform:scale(1.2);-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out}100%{-webkit-transform:scale(1);transform:scale(1)}}@-webkit-keyframes refresher-rotate{from{-webkit-transform:rotate(0deg);transform:rotate(0deg)}to{-webkit-transform:rotate(180deg);transform:rotate(180deg)}}@keyframes refresher-rotate{from{-webkit-transform:rotate(0deg);transform:rotate(0deg)}to{-webkit-transform:rotate(180deg);transform:rotate(180deg)}}\";\n\nconst refresherMdCss = \"ion-refresher{left:0;top:0;display:none;position:absolute;width:100%;height:60px;pointer-events:none;z-index:-1}[dir=rtl] ion-refresher,:host-context([dir=rtl]) ion-refresher{left:unset;right:unset;right:0}ion-refresher.refresher-active{display:block}ion-refresher-content{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:center;justify-content:center;height:100%}.refresher-pulling,.refresher-refreshing{display:none;width:100%}.refresher-pulling-icon,.refresher-refreshing-icon{-webkit-transform-origin:center;transform-origin:center;-webkit-transition:200ms;transition:200ms;font-size:30px;text-align:center}[dir=rtl] .refresher-pulling-icon,:host-context([dir=rtl]) .refresher-pulling-icon,[dir=rtl] .refresher-refreshing-icon,:host-context([dir=rtl]) .refresher-refreshing-icon{-webkit-transform-origin:calc(100% - center);transform-origin:calc(100% - center)}.refresher-pulling-text,.refresher-refreshing-text{font-size:16px;text-align:center}ion-refresher-content .arrow-container{display:none}.refresher-pulling ion-refresher-content .refresher-pulling{display:block}.refresher-ready ion-refresher-content .refresher-pulling{display:block}.refresher-ready ion-refresher-content .refresher-pulling-icon{-webkit-transform:rotate(180deg);transform:rotate(180deg)}.refresher-refreshing ion-refresher-content .refresher-refreshing{display:block}.refresher-cancelling ion-refresher-content .refresher-pulling{display:block}.refresher-cancelling ion-refresher-content .refresher-pulling-icon{-webkit-transform:scale(0);transform:scale(0)}.refresher-completing ion-refresher-content .refresher-refreshing{display:block}.refresher-completing ion-refresher-content .refresher-refreshing-icon{-webkit-transform:scale(0);transform:scale(0)}.refresher-native .refresher-pulling-text,.refresher-native .refresher-refreshing-text{display:none}.refresher-md .refresher-pulling-icon,.refresher-md .refresher-refreshing-icon{color:var(--ion-text-color, #000)}.refresher-md .refresher-pulling-text,.refresher-md .refresher-refreshing-text{color:var(--ion-text-color, #000)}.refresher-md .refresher-refreshing .spinner-lines-md line,.refresher-md .refresher-refreshing .spinner-lines-small-md line,.refresher-md .refresher-refreshing .spinner-crescent circle{stroke:var(--ion-text-color, #000)}.refresher-md .refresher-refreshing .spinner-bubbles circle,.refresher-md .refresher-refreshing .spinner-circles circle,.refresher-md .refresher-refreshing .spinner-dots circle{fill:var(--ion-text-color, #000)}ion-refresher.refresher-native{display:block;z-index:1}ion-refresher.refresher-native ion-spinner{margin-left:auto;margin-right:auto;margin-top:0;margin-bottom:0;width:24px;height:24px;color:var(--ion-color-primary, #3880ff)}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){ion-refresher.refresher-native ion-spinner{margin-left:unset;margin-right:unset;-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto}}ion-refresher.refresher-native .spinner-arrow-container{display:inherit}ion-refresher.refresher-native .arrow-container{display:block;position:absolute;width:24px;height:24px}ion-refresher.refresher-native .arrow-container ion-icon{margin-left:auto;margin-right:auto;margin-top:0;margin-bottom:0;left:0;right:0;bottom:-4px;position:absolute;color:var(--ion-color-primary, #3880ff);font-size:12px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){ion-refresher.refresher-native .arrow-container ion-icon{margin-left:unset;margin-right:unset;-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto}}ion-refresher.refresher-native.refresher-pulling ion-refresher-content .refresher-pulling,ion-refresher.refresher-native.refresher-ready ion-refresher-content .refresher-pulling{display:-ms-flexbox;display:flex}ion-refresher.refresher-native.refresher-refreshing ion-refresher-content .refresher-refreshing,ion-refresher.refresher-native.refresher-completing ion-refresher-content .refresher-refreshing,ion-refresher.refresher-native.refresher-cancelling ion-refresher-content .refresher-refreshing{display:-ms-flexbox;display:flex}ion-refresher.refresher-native .refresher-pulling-icon{-webkit-transform:translateY(calc(-100% - 10px));transform:translateY(calc(-100% - 10px))}ion-refresher.refresher-native .refresher-pulling-icon,ion-refresher.refresher-native .refresher-refreshing-icon{margin-left:auto;margin-right:auto;margin-top:0;margin-bottom:0;border-radius:100%;padding-left:8px;padding-right:8px;padding-top:8px;padding-bottom:8px;display:-ms-flexbox;display:flex;border:1px solid #ececec;background:white;-webkit-box-shadow:0px 1px 6px rgba(0, 0, 0, 0.1);box-shadow:0px 1px 6px rgba(0, 0, 0, 0.1)}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){ion-refresher.refresher-native .refresher-pulling-icon,ion-refresher.refresher-native .refresher-refreshing-icon{margin-left:unset;margin-right:unset;-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto}}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){ion-refresher.refresher-native .refresher-pulling-icon,ion-refresher.refresher-native .refresher-refreshing-icon{padding-left:unset;padding-right:unset;-webkit-padding-start:8px;padding-inline-start:8px;-webkit-padding-end:8px;padding-inline-end:8px}}\";\n\nconst Refresher = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.ionRefresh = createEvent(this, \"ionRefresh\", 7);\n    this.ionPull = createEvent(this, \"ionPull\", 7);\n    this.ionStart = createEvent(this, \"ionStart\", 7);\n    this.appliedStyles = false;\n    this.didStart = false;\n    this.progress = 0;\n    this.pointerDown = false;\n    this.needsCompletion = false;\n    this.didRefresh = false;\n    this.lastVelocityY = 0;\n    this.animations = [];\n    this.nativeRefresher = false;\n    /**\n     * The current state which the refresher is in. The refresher's states include:\n     *\n     * - `inactive` - The refresher is not being pulled down or refreshing and is currently hidden.\n     * - `pulling` - The user is actively pulling down the refresher, but has not reached the point yet that if the user lets go, it'll refresh.\n     * - `cancelling` - The user pulled down the refresher and let go, but did not pull down far enough to kick off the `refreshing` state. After letting go, the refresher is in the `cancelling` state while it is closing, and will go back to the `inactive` state once closed.\n     * - `ready` - The user has pulled down the refresher far enough that if they let go, it'll begin the `refreshing` state.\n     * - `refreshing` - The refresher is actively waiting on the async operation to end. Once the refresh handler calls `complete()` it will begin the `completing` state.\n     * - `completing` - The `refreshing` state has finished and the refresher is in the way of closing itself. Once closed, the refresher will go back to the `inactive` state.\n     */\n    this.state = 1 /* Inactive */;\n    /**\n     * The minimum distance the user must pull down until the\n     * refresher will go into the `refreshing` state.\n     * Does not apply when the refresher content uses a spinner,\n     * enabling the native refresher.\n     */\n    this.pullMin = 60;\n    /**\n     * The maximum distance of the pull until the refresher\n     * will automatically go into the `refreshing` state.\n     * Defaults to the result of `pullMin + 60`.\n     * Does not apply when  the refresher content uses a spinner,\n     * enabling the native refresher.\n     */\n    this.pullMax = this.pullMin + 60;\n    /**\n     * Time it takes to close the refresher.\n     * Does not apply when the refresher content uses a spinner,\n     * enabling the native refresher.\n     */\n    this.closeDuration = '280ms';\n    /**\n     * Time it takes the refresher to to snap back to the `refreshing` state.\n     * Does not apply when the refresher content uses a spinner,\n     * enabling the native refresher.\n     */\n    this.snapbackDuration = '280ms';\n    /**\n     * How much to multiply the pull speed by. To slow the pull animation down,\n     * pass a number less than `1`. To speed up the pull, pass a number greater\n     * than `1`. The default value is `1` which is equal to the speed of the cursor.\n     * If a negative value is passed in, the factor will be `1` instead.\n     *\n     * For example: If the value passed is `1.2` and the content is dragged by\n     * `10` pixels, instead of `10` pixels the content will be pulled by `12` pixels\n     * (an increase of 20 percent). If the value passed is `0.8`, the dragged amount\n     * will be `8` pixels, less than the amount the cursor has moved.\n     *\n     * Does not apply when the refresher content uses a spinner,\n     * enabling the native refresher.\n     */\n    this.pullFactor = 1;\n    /**\n     * If `true`, the refresher will be hidden.\n     */\n    this.disabled = false;\n  }\n  disabledChanged() {\n    if (this.gesture) {\n      this.gesture.enable(!this.disabled);\n    }\n  }\n  async checkNativeRefresher() {\n    const useNativeRefresher = await shouldUseNativeRefresher(this.el, getIonMode(this));\n    if (useNativeRefresher && !this.nativeRefresher) {\n      const contentEl = this.el.closest('ion-content');\n      this.setupNativeRefresher(contentEl);\n    }\n    else if (!useNativeRefresher) {\n      this.destroyNativeRefresher();\n    }\n  }\n  destroyNativeRefresher() {\n    if (this.scrollEl && this.scrollListenerCallback) {\n      this.scrollEl.removeEventListener('scroll', this.scrollListenerCallback);\n      this.scrollListenerCallback = undefined;\n    }\n    this.nativeRefresher = false;\n  }\n  async resetNativeRefresher(el, state) {\n    this.state = state;\n    if (getIonMode(this) === 'ios') {\n      await translateElement(el, undefined);\n    }\n    else {\n      await transitionEndAsync(this.el.querySelector('.refresher-refreshing-icon'), 200);\n    }\n    this.didRefresh = false;\n    this.needsCompletion = false;\n    this.pointerDown = false;\n    this.animations.forEach(ani => ani.destroy());\n    this.animations = [];\n    this.progress = 0;\n    this.state = 1 /* Inactive */;\n  }\n  async setupiOSNativeRefresher(pullingSpinner, refreshingSpinner) {\n    this.elementToTransform = this.scrollEl;\n    const ticks = pullingSpinner.shadowRoot.querySelectorAll('svg');\n    let MAX_PULL = this.scrollEl.clientHeight * 0.16;\n    const NUM_TICKS = ticks.length;\n    writeTask(() => ticks.forEach(el => el.style.setProperty('animation', 'none')));\n    this.scrollListenerCallback = () => {\n      // If pointer is not on screen or refresher is not active, ignore scroll\n      if (!this.pointerDown && this.state === 1 /* Inactive */) {\n        return;\n      }\n      readTask(() => {\n        // PTR should only be active when overflow scrolling at the top\n        const scrollTop = this.scrollEl.scrollTop;\n        const refresherHeight = this.el.clientHeight;\n        if (scrollTop > 0) {\n          /**\n           * If refresher is refreshing and user tries to scroll\n           * progressively fade refresher out/in\n           */\n          if (this.state === 8 /* Refreshing */) {\n            const ratio = clamp(0, scrollTop / (refresherHeight * 0.5), 1);\n            writeTask(() => setSpinnerOpacity(refreshingSpinner, 1 - ratio));\n            return;\n          }\n          writeTask(() => setSpinnerOpacity(pullingSpinner, 0));\n          return;\n        }\n        if (this.pointerDown) {\n          if (!this.didStart) {\n            this.didStart = true;\n            this.ionStart.emit();\n          }\n          // emit \"pulling\" on every move\n          if (this.pointerDown) {\n            this.ionPull.emit();\n          }\n        }\n        // delay showing the next tick marks until user has pulled 30px\n        const opacity = clamp(0, Math.abs(scrollTop) / refresherHeight, 0.99);\n        const pullAmount = this.progress = clamp(0, (Math.abs(scrollTop) - 30) / MAX_PULL, 1);\n        const currentTickToShow = clamp(0, Math.floor(pullAmount * NUM_TICKS), NUM_TICKS - 1);\n        const shouldShowRefreshingSpinner = this.state === 8 /* Refreshing */ || currentTickToShow === NUM_TICKS - 1;\n        if (shouldShowRefreshingSpinner) {\n          if (this.pointerDown) {\n            handleScrollWhileRefreshing(refreshingSpinner, this.lastVelocityY);\n          }\n          if (!this.didRefresh) {\n            this.beginRefresh();\n            this.didRefresh = true;\n            hapticImpact({ style: 'light' });\n            /**\n             * Translate the content element otherwise when pointer is removed\n             * from screen the scroll content will bounce back over the refresher\n             */\n            if (!this.pointerDown) {\n              translateElement(this.elementToTransform, `${refresherHeight}px`);\n            }\n          }\n        }\n        else {\n          this.state = 2 /* Pulling */;\n          handleScrollWhilePulling(pullingSpinner, ticks, opacity, currentTickToShow);\n        }\n      });\n    };\n    this.scrollEl.addEventListener('scroll', this.scrollListenerCallback);\n    this.gesture = (await import('./index-f49d994d.js')).createGesture({\n      el: this.scrollEl,\n      gestureName: 'refresher',\n      gesturePriority: 31,\n      direction: 'y',\n      threshold: 5,\n      onStart: () => {\n        this.pointerDown = true;\n        if (!this.didRefresh) {\n          translateElement(this.elementToTransform, '0px');\n        }\n        /**\n         * If the content had `display: none` when\n         * the refresher was initialized, its clientHeight\n         * will be 0. When the gesture starts, the content\n         * will be visible, so try to get the correct\n         * client height again. This is most common when\n         * using the refresher in an ion-menu.\n         */\n        if (MAX_PULL === 0) {\n          MAX_PULL = this.scrollEl.clientHeight * 0.16;\n        }\n      },\n      onMove: ev => {\n        this.lastVelocityY = ev.velocityY;\n      },\n      onEnd: () => {\n        this.pointerDown = false;\n        this.didStart = false;\n        if (this.needsCompletion) {\n          this.resetNativeRefresher(this.elementToTransform, 32 /* Completing */);\n          this.needsCompletion = false;\n        }\n        else if (this.didRefresh) {\n          readTask(() => translateElement(this.elementToTransform, `${this.el.clientHeight}px`));\n        }\n      },\n    });\n    this.disabledChanged();\n  }\n  async setupMDNativeRefresher(contentEl, pullingSpinner, refreshingSpinner) {\n    const circle = getElementRoot(pullingSpinner).querySelector('circle');\n    const pullingRefresherIcon = this.el.querySelector('ion-refresher-content .refresher-pulling-icon');\n    const refreshingCircle = getElementRoot(refreshingSpinner).querySelector('circle');\n    if (circle !== null && refreshingCircle !== null) {\n      writeTask(() => {\n        circle.style.setProperty('animation', 'none');\n        // This lines up the animation on the refreshing spinner with the pulling spinner\n        refreshingSpinner.style.setProperty('animation-delay', '-655ms');\n        refreshingCircle.style.setProperty('animation-delay', '-655ms');\n      });\n    }\n    this.gesture = (await import('./index-f49d994d.js')).createGesture({\n      el: this.scrollEl,\n      gestureName: 'refresher',\n      gesturePriority: 31,\n      direction: 'y',\n      threshold: 5,\n      canStart: () => this.state !== 8 /* Refreshing */ && this.state !== 32 /* Completing */ && this.scrollEl.scrollTop === 0,\n      onStart: (ev) => {\n        ev.data = { animation: undefined, didStart: false, cancelled: false };\n      },\n      onMove: (ev) => {\n        if ((ev.velocityY < 0 && this.progress === 0 && !ev.data.didStart) || ev.data.cancelled) {\n          ev.data.cancelled = true;\n          return;\n        }\n        if (!ev.data.didStart) {\n          ev.data.didStart = true;\n          this.state = 2 /* Pulling */;\n          writeTask(() => {\n            const animationType = getRefresherAnimationType(contentEl);\n            const animation = createPullingAnimation(animationType, pullingRefresherIcon);\n            ev.data.animation = animation;\n            this.scrollEl.style.setProperty('--overflow', 'hidden');\n            animation.progressStart(false, 0);\n            this.ionStart.emit();\n            this.animations.push(animation);\n          });\n          return;\n        }\n        // Since we are using an easing curve, slow the gesture tracking down a bit\n        this.progress = clamp(0, (ev.deltaY / 180) * 0.5, 1);\n        ev.data.animation.progressStep(this.progress);\n        this.ionPull.emit();\n      },\n      onEnd: (ev) => {\n        if (!ev.data.didStart) {\n          return;\n        }\n        writeTask(() => this.scrollEl.style.removeProperty('--overflow'));\n        if (this.progress <= 0.4) {\n          this.gesture.enable(false);\n          ev.data.animation\n            .progressEnd(0, this.progress, 500)\n            .onFinish(() => {\n            this.animations.forEach(ani => ani.destroy());\n            this.animations = [];\n            this.gesture.enable(true);\n            this.state = 1 /* Inactive */;\n          });\n          return;\n        }\n        const progress = getTimeGivenProgression([0, 0], [0, 0], [1, 1], [1, 1], this.progress)[0];\n        const snapBackAnimation = createSnapBackAnimation(pullingRefresherIcon);\n        this.animations.push(snapBackAnimation);\n        writeTask(async () => {\n          pullingRefresherIcon.style.setProperty('--ion-pulling-refresher-translate', `${(progress * 100)}px`);\n          ev.data.animation.progressEnd();\n          await snapBackAnimation.play();\n          this.beginRefresh();\n          ev.data.animation.destroy();\n        });\n      }\n    });\n    this.disabledChanged();\n  }\n  async setupNativeRefresher(contentEl) {\n    if (this.scrollListenerCallback || !contentEl || this.nativeRefresher || !this.scrollEl) {\n      return;\n    }\n    /**\n     * If using non-native refresher before make sure\n     * we clean up any old CSS. This can happen when\n     * a user manually calls the refresh method in a\n     * component create callback before the native\n     * refresher is setup.\n     */\n    this.setCss(0, '', false, '');\n    this.nativeRefresher = true;\n    const pullingSpinner = this.el.querySelector('ion-refresher-content .refresher-pulling ion-spinner');\n    const refreshingSpinner = this.el.querySelector('ion-refresher-content .refresher-refreshing ion-spinner');\n    if (getIonMode(this) === 'ios') {\n      this.setupiOSNativeRefresher(pullingSpinner, refreshingSpinner);\n    }\n    else {\n      this.setupMDNativeRefresher(contentEl, pullingSpinner, refreshingSpinner);\n    }\n  }\n  componentDidUpdate() {\n    this.checkNativeRefresher();\n  }\n  async connectedCallback() {\n    if (this.el.getAttribute('slot') !== 'fixed') {\n      console.error('Make sure you use: <ion-refresher slot=\"fixed\">');\n      return;\n    }\n    const contentEl = this.el.closest('ion-content');\n    if (!contentEl) {\n      console.error('<ion-refresher> must be used inside an <ion-content>');\n      return;\n    }\n    await contentEl.componentOnReady();\n    this.scrollEl = await contentEl.getScrollElement();\n    this.backgroundContentEl = getElementRoot(contentEl).querySelector('#background-content');\n    if (await shouldUseNativeRefresher(this.el, getIonMode(this))) {\n      this.setupNativeRefresher(contentEl);\n    }\n    else {\n      this.gesture = (await import('./index-f49d994d.js')).createGesture({\n        el: contentEl,\n        gestureName: 'refresher',\n        gesturePriority: 31,\n        direction: 'y',\n        threshold: 20,\n        passive: false,\n        canStart: () => this.canStart(),\n        onStart: () => this.onStart(),\n        onMove: ev => this.onMove(ev),\n        onEnd: () => this.onEnd(),\n      });\n      this.disabledChanged();\n    }\n  }\n  disconnectedCallback() {\n    this.destroyNativeRefresher();\n    this.scrollEl = undefined;\n    if (this.gesture) {\n      this.gesture.destroy();\n      this.gesture = undefined;\n    }\n  }\n  /**\n   * Call `complete()` when your async operation has completed.\n   * For example, the `refreshing` state is while the app is performing\n   * an asynchronous operation, such as receiving more data from an\n   * AJAX request. Once the data has been received, you then call this\n   * method to signify that the refreshing has completed and to close\n   * the refresher. This method also changes the refresher's state from\n   * `refreshing` to `completing`.\n   */\n  async complete() {\n    if (this.nativeRefresher) {\n      this.needsCompletion = true;\n      // Do not reset scroll el until user removes pointer from screen\n      if (!this.pointerDown) {\n        raf(() => raf(() => this.resetNativeRefresher(this.elementToTransform, 32 /* Completing */)));\n      }\n    }\n    else {\n      this.close(32 /* Completing */, '120ms');\n    }\n  }\n  /**\n   * Changes the refresher's state from `refreshing` to `cancelling`.\n   */\n  async cancel() {\n    if (this.nativeRefresher) {\n      // Do not reset scroll el until user removes pointer from screen\n      if (!this.pointerDown) {\n        raf(() => raf(() => this.resetNativeRefresher(this.elementToTransform, 16 /* Cancelling */)));\n      }\n    }\n    else {\n      this.close(16 /* Cancelling */, '');\n    }\n  }\n  /**\n   * A number representing how far down the user has pulled.\n   * The number `0` represents the user hasn't pulled down at all. The\n   * number `1`, and anything greater than `1`, represents that the user\n   * has pulled far enough down that when they let go then the refresh will\n   * happen. If they let go and the number is less than `1`, then the\n   * refresh will not happen, and the content will return to it's original\n   * position.\n   */\n  getProgress() {\n    return Promise.resolve(this.progress);\n  }\n  canStart() {\n    if (!this.scrollEl) {\n      return false;\n    }\n    if (this.state !== 1 /* Inactive */) {\n      return false;\n    }\n    // if the scrollTop is greater than zero then it's\n    // not possible to pull the content down yet\n    if (this.scrollEl.scrollTop > 0) {\n      return false;\n    }\n    return true;\n  }\n  onStart() {\n    this.progress = 0;\n    this.state = 1 /* Inactive */;\n  }\n  onMove(detail) {\n    if (!this.scrollEl) {\n      return;\n    }\n    // this method can get called like a bazillion times per second,\n    // so it's built to be as efficient as possible, and does its\n    // best to do any DOM read/writes only when absolutely necessary\n    // if multi-touch then get out immediately\n    const ev = detail.event;\n    if (ev.touches && ev.touches.length > 1) {\n      return;\n    }\n    // do nothing if it's actively refreshing\n    // or it's in the way of closing\n    // or this was never a startY\n    if ((this.state & 56 /* _BUSY_ */) !== 0) {\n      return;\n    }\n    const pullFactor = (Number.isNaN(this.pullFactor) || this.pullFactor < 0) ? 1 : this.pullFactor;\n    const deltaY = detail.deltaY * pullFactor;\n    // don't bother if they're scrolling up\n    // and have not already started dragging\n    if (deltaY <= 0) {\n      // the current Y is higher than the starting Y\n      // so they scrolled up enough to be ignored\n      this.progress = 0;\n      this.state = 1 /* Inactive */;\n      if (this.appliedStyles) {\n        // reset the styles only if they were applied\n        this.setCss(0, '', false, '');\n        return;\n      }\n      return;\n    }\n    if (this.state === 1 /* Inactive */) {\n      // this refresh is not already actively pulling down\n      // get the content's scrollTop\n      const scrollHostScrollTop = this.scrollEl.scrollTop;\n      // if the scrollTop is greater than zero then it's\n      // not possible to pull the content down yet\n      if (scrollHostScrollTop > 0) {\n        this.progress = 0;\n        return;\n      }\n      // content scrolled all the way to the top, and dragging down\n      this.state = 2 /* Pulling */;\n    }\n    // prevent native scroll events\n    if (ev.cancelable) {\n      ev.preventDefault();\n    }\n    // the refresher is actively pulling at this point\n    // move the scroll element within the content element\n    this.setCss(deltaY, '0ms', true, '');\n    if (deltaY === 0) {\n      // don't continue if there's no delta yet\n      this.progress = 0;\n      return;\n    }\n    const pullMin = this.pullMin;\n    // set pull progress\n    this.progress = deltaY / pullMin;\n    // emit \"start\" if it hasn't started yet\n    if (!this.didStart) {\n      this.didStart = true;\n      this.ionStart.emit();\n    }\n    // emit \"pulling\" on every move\n    this.ionPull.emit();\n    // do nothing if the delta is less than the pull threshold\n    if (deltaY < pullMin) {\n      // ensure it stays in the pulling state, cuz its not ready yet\n      this.state = 2 /* Pulling */;\n      return;\n    }\n    if (deltaY > this.pullMax) {\n      // they pulled farther than the max, so kick off the refresh\n      this.beginRefresh();\n      return;\n    }\n    // pulled farther than the pull min!!\n    // it is now in the `ready` state!!\n    // if they let go then it'll refresh, kerpow!!\n    this.state = 4 /* Ready */;\n    return;\n  }\n  onEnd() {\n    // only run in a zone when absolutely necessary\n    if (this.state === 4 /* Ready */) {\n      // they pulled down far enough, so it's ready to refresh\n      this.beginRefresh();\n    }\n    else if (this.state === 2 /* Pulling */) {\n      // they were pulling down, but didn't pull down far enough\n      // set the content back to it's original location\n      // and close the refresher\n      // set that the refresh is actively cancelling\n      this.cancel();\n    }\n  }\n  beginRefresh() {\n    // assumes we're already back in a zone\n    // they pulled down far enough, so it's ready to refresh\n    this.state = 8 /* Refreshing */;\n    // place the content in a hangout position while it thinks\n    this.setCss(this.pullMin, this.snapbackDuration, true, '');\n    // emit \"refresh\" because it was pulled down far enough\n    // and they let go to begin refreshing\n    this.ionRefresh.emit({\n      complete: this.complete.bind(this)\n    });\n  }\n  close(state, delay) {\n    // create fallback timer incase something goes wrong with transitionEnd event\n    setTimeout(() => {\n      this.state = 1 /* Inactive */;\n      this.progress = 0;\n      this.didStart = false;\n      this.setCss(0, '0ms', false, '');\n    }, 600);\n    // reset set the styles on the scroll element\n    // set that the refresh is actively cancelling/completing\n    this.state = state;\n    this.setCss(0, this.closeDuration, true, delay);\n    // TODO: stop gesture\n  }\n  setCss(y, duration, overflowVisible, delay) {\n    if (this.nativeRefresher) {\n      return;\n    }\n    this.appliedStyles = (y > 0);\n    writeTask(() => {\n      if (this.scrollEl && this.backgroundContentEl) {\n        const scrollStyle = this.scrollEl.style;\n        const backgroundStyle = this.backgroundContentEl.style;\n        scrollStyle.transform = backgroundStyle.transform = ((y > 0) ? `translateY(${y}px) translateZ(0px)` : '');\n        scrollStyle.transitionDuration = backgroundStyle.transitionDuration = duration;\n        scrollStyle.transitionDelay = backgroundStyle.transitionDelay = delay;\n        scrollStyle.overflow = (overflowVisible ? 'hidden' : '');\n      }\n    });\n  }\n  render() {\n    const mode = getIonMode(this);\n    return (h(Host, { slot: \"fixed\", class: {\n        [mode]: true,\n        // Used internally for styling\n        [`refresher-${mode}`]: true,\n        'refresher-native': this.nativeRefresher,\n        'refresher-active': this.state !== 1 /* Inactive */,\n        'refresher-pulling': this.state === 2 /* Pulling */,\n        'refresher-ready': this.state === 4 /* Ready */,\n        'refresher-refreshing': this.state === 8 /* Refreshing */,\n        'refresher-cancelling': this.state === 16 /* Cancelling */,\n        'refresher-completing': this.state === 32 /* Completing */,\n      } }));\n  }\n  get el() { return getElement(this); }\n  static get watchers() { return {\n    \"disabled\": [\"disabledChanged\"]\n  }; }\n};\nRefresher.style = {\n  ios: refresherIosCss,\n  md: refresherMdCss\n};\n\nconst RefresherContent = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n  }\n  componentWillLoad() {\n    if (this.pullingIcon === undefined) {\n      const mode = getIonMode(this);\n      const overflowRefresher = this.el.style.webkitOverflowScrolling !== undefined ? 'lines' : 'arrow-down';\n      this.pullingIcon = config.get('refreshingIcon', mode === 'ios' && isPlatform('mobile') ? config.get('spinner', overflowRefresher) : 'circular');\n    }\n    if (this.refreshingSpinner === undefined) {\n      const mode = getIonMode(this);\n      this.refreshingSpinner = config.get('refreshingSpinner', config.get('spinner', mode === 'ios' ? 'lines' : 'circular'));\n    }\n  }\n  render() {\n    const pullingIcon = this.pullingIcon;\n    const hasSpinner = pullingIcon != null && SPINNERS[pullingIcon] !== undefined;\n    const mode = getIonMode(this);\n    return (h(Host, { class: mode }, h(\"div\", { class: \"refresher-pulling\" }, this.pullingIcon && hasSpinner &&\n      h(\"div\", { class: \"refresher-pulling-icon\" }, h(\"div\", { class: \"spinner-arrow-container\" }, h(\"ion-spinner\", { name: this.pullingIcon, paused: true }), mode === 'md' && this.pullingIcon === 'circular' &&\n        h(\"div\", { class: \"arrow-container\" }, h(\"ion-icon\", { name: \"caret-back-sharp\" })))), this.pullingIcon && !hasSpinner &&\n      h(\"div\", { class: \"refresher-pulling-icon\" }, h(\"ion-icon\", { icon: this.pullingIcon, lazy: false })), this.pullingText &&\n      h(\"div\", { class: \"refresher-pulling-text\", innerHTML: sanitizeDOMString(this.pullingText) })), h(\"div\", { class: \"refresher-refreshing\" }, this.refreshingSpinner &&\n      h(\"div\", { class: \"refresher-refreshing-icon\" }, h(\"ion-spinner\", { name: this.refreshingSpinner })), this.refreshingText &&\n      h(\"div\", { class: \"refresher-refreshing-text\", innerHTML: sanitizeDOMString(this.refreshingText) }))));\n  }\n  get el() { return getElement(this); }\n};\n\nexport { Refresher as ion_refresher, RefresherContent as ion_refresher_content };\n"]},"metadata":{},"sourceType":"module"}