{"ast":null,"code":"var spinners = {\n  'bubbles': {\n    dur: 1000,\n    circles: 9,\n    fn: function fn(dur, index, total) {\n      var animationDelay = \"\".concat(dur * index / total - dur, \"ms\");\n      var angle = 2 * Math.PI * index / total;\n      return {\n        r: 5,\n        style: {\n          'top': \"\".concat(9 * Math.sin(angle), \"px\"),\n          'left': \"\".concat(9 * Math.cos(angle), \"px\"),\n          'animation-delay': animationDelay\n        }\n      };\n    }\n  },\n  'circles': {\n    dur: 1000,\n    circles: 8,\n    fn: function fn(dur, index, total) {\n      var step = index / total;\n      var animationDelay = \"\".concat(dur * step - dur, \"ms\");\n      var angle = 2 * Math.PI * step;\n      return {\n        r: 5,\n        style: {\n          'top': \"\".concat(9 * Math.sin(angle), \"px\"),\n          'left': \"\".concat(9 * Math.cos(angle), \"px\"),\n          'animation-delay': animationDelay\n        }\n      };\n    }\n  },\n  'circular': {\n    dur: 1400,\n    elmDuration: true,\n    circles: 1,\n    fn: function fn() {\n      return {\n        r: 20,\n        cx: 48,\n        cy: 48,\n        fill: 'none',\n        viewBox: '24 24 48 48',\n        transform: 'translate(0,0)',\n        style: {}\n      };\n    }\n  },\n  'crescent': {\n    dur: 750,\n    circles: 1,\n    fn: function fn() {\n      return {\n        r: 26,\n        style: {}\n      };\n    }\n  },\n  'dots': {\n    dur: 750,\n    circles: 3,\n    fn: function fn(_, index) {\n      var animationDelay = -(110 * index) + 'ms';\n      return {\n        r: 6,\n        style: {\n          'left': \"\".concat(9 - 9 * index, \"px\"),\n          'animation-delay': animationDelay\n        }\n      };\n    }\n  },\n  'lines': {\n    dur: 1000,\n    lines: 12,\n    fn: function fn(dur, index, total) {\n      var transform = \"rotate(\".concat(30 * index + (index < 6 ? 180 : -180), \"deg)\");\n      var animationDelay = \"\".concat(dur * index / total - dur, \"ms\");\n      return {\n        y1: 17,\n        y2: 29,\n        style: {\n          'transform': transform,\n          'animation-delay': animationDelay\n        }\n      };\n    }\n  },\n  'lines-small': {\n    dur: 1000,\n    lines: 12,\n    fn: function fn(dur, index, total) {\n      var transform = \"rotate(\".concat(30 * index + (index < 6 ? 180 : -180), \"deg)\");\n      var animationDelay = \"\".concat(dur * index / total - dur, \"ms\");\n      return {\n        y1: 12,\n        y2: 20,\n        style: {\n          'transform': transform,\n          'animation-delay': animationDelay\n        }\n      };\n    }\n  }\n};\nvar SPINNERS = spinners;\nexport { SPINNERS as S };","map":{"version":3,"sources":["D:/Recaudooffline V.1.0.1/node_modules/@ionic/core/dist/esm/spinner-configs-cd7845af.js"],"names":["spinners","dur","circles","fn","index","total","animationDelay","angle","Math","PI","r","style","sin","cos","step","elmDuration","cx","cy","fill","viewBox","transform","_","lines","y1","y2","SPINNERS","S"],"mappings":"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","sourcesContent":["const spinners = {\n  'bubbles': {\n    dur: 1000,\n    circles: 9,\n    fn: (dur, index, total) => {\n      const animationDelay = `${(dur * index / total) - dur}ms`;\n      const angle = 2 * Math.PI * index / total;\n      return {\n        r: 5,\n        style: {\n          'top': `${9 * Math.sin(angle)}px`,\n          'left': `${9 * Math.cos(angle)}px`,\n          'animation-delay': animationDelay,\n        }\n      };\n    }\n  },\n  'circles': {\n    dur: 1000,\n    circles: 8,\n    fn: (dur, index, total) => {\n      const step = index / total;\n      const animationDelay = `${(dur * step) - dur}ms`;\n      const angle = 2 * Math.PI * step;\n      return {\n        r: 5,\n        style: {\n          'top': `${9 * Math.sin(angle)}px`,\n          'left': `${9 * Math.cos(angle)}px`,\n          'animation-delay': animationDelay,\n        }\n      };\n    }\n  },\n  'circular': {\n    dur: 1400,\n    elmDuration: true,\n    circles: 1,\n    fn: () => {\n      return {\n        r: 20,\n        cx: 48,\n        cy: 48,\n        fill: 'none',\n        viewBox: '24 24 48 48',\n        transform: 'translate(0,0)',\n        style: {}\n      };\n    }\n  },\n  'crescent': {\n    dur: 750,\n    circles: 1,\n    fn: () => {\n      return {\n        r: 26,\n        style: {}\n      };\n    }\n  },\n  'dots': {\n    dur: 750,\n    circles: 3,\n    fn: (_, index) => {\n      const animationDelay = -(110 * index) + 'ms';\n      return {\n        r: 6,\n        style: {\n          'left': `${9 - (9 * index)}px`,\n          'animation-delay': animationDelay,\n        }\n      };\n    }\n  },\n  'lines': {\n    dur: 1000,\n    lines: 12,\n    fn: (dur, index, total) => {\n      const transform = `rotate(${30 * index + (index < 6 ? 180 : -180)}deg)`;\n      const animationDelay = `${(dur * index / total) - dur}ms`;\n      return {\n        y1: 17,\n        y2: 29,\n        style: {\n          'transform': transform,\n          'animation-delay': animationDelay,\n        }\n      };\n    }\n  },\n  'lines-small': {\n    dur: 1000,\n    lines: 12,\n    fn: (dur, index, total) => {\n      const transform = `rotate(${30 * index + (index < 6 ? 180 : -180)}deg)`;\n      const animationDelay = `${(dur * index / total) - dur}ms`;\n      return {\n        y1: 12,\n        y2: 20,\n        style: {\n          'transform': transform,\n          'animation-delay': animationDelay,\n        }\n      };\n    }\n  }\n};\nconst SPINNERS = spinners;\n\nexport { SPINNERS as S };\n"]},"metadata":{},"sourceType":"module"}